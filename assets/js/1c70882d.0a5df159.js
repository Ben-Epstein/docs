"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[5225],{62605:(e,t,n)=>{n.d(t,{Z:()=>f});var r=n(67294),l=n(74866),a=n(85162),i=n(11570),o=n(32871),s=n(83599);n(99869);const d=(0,r.memo)((e=>{let{data:t}=e;return r.createElement(r.Fragment,null,r.createElement(i.HH,{type:"target",position:i.Ly.Left,style:{background:"#555"}}),r.createElement("div",null,r.createElement("strong",null,t.label)),r.createElement(i.HH,{type:"source",position:i.Ly.Right,id:"b"}))}));var m=n(33140),c=n(73091),E=n(2029),p=n(76887),u=n(49188),S=n(92949);const h={default:d},y={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function f(e){let{children:t,data:n,GLink:d}=e;const{colorMode:f}=(0,S.I)();if(!t)return r.createElement(r.Fragment,null,r.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",r.createElement("a",{href:`${u.i}/${d}`,target:"_blank"},"here")),r.createElement("br",null)," ",r.createElement("br",null));const _=JSON.parse(t).rfInstance,O="20em";return r.createElement("div",null,r.createElement(l.Z,null,r.createElement(a.Z,{value:"app",label:"App",default:!0},r.createElement(i.tV,null,r.createElement("div",{style:{height:O}},r.createElement(i.x$,{nodes:_.nodes,nodeTypes:h,edges:_.edges,fitView:!0,proOptions:{hideAttribution:!0}},r.createElement(o.a,{style:{backgroundColor:"light"===f?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===f?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===f?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),r.createElement(s.A,null))))),r.createElement(a.Z,{value:"output",label:"Output"},r.createElement("div",{style:{minHeight:O}},r.createElement(m.k,null,r.createElement(c.E,{label:"x",style:y}),r.createElement(c.E,{dependentAxis:!0,label:"y",style:y}),r.createElement(E.C,{style:{data:{fill:"#7B61FF"}},size:1,data:n})))),r.createElement(a.Z,{value:"spec",label:"App JSON spec"},r.createElement("div",{style:{minHeight:O}},r.createElement(p.L,{data:_})))))}},89418:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294),l=n(25365);function a(e){let{children:t,index:n,folderPath:a}=e;const i=["notes.md","hardware.md","media.md"],o=["Theory and technical notes","Parts list and drivers","Media"][n],s="https://github.com/flojoy-io/docs/tree/main/docs/"+a+i[n],d="string"==typeof t&&t.includes("Driver doc :");return r.createElement(r.Fragment,null,r.createElement("br",null),r.createElement("details",null,r.createElement("summary",null,r.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},r.createElement("h4",null,o))),d?null:""!==t?r.createElement(l.D,null,t):r.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][n]),r.createElement("br",null),r.createElement("small",null,r.createElement("i",null,r.createElement("a",{href:s},"Edit ",i[n]," on GitHub")))),r.createElement("hr",null))}},57685:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(67294),l=n(5673),a=n(70266),i=n(7284),o=n(85012),s=n(92949);function d(e){let{children:t}=e;const{colorMode:n}=(0,s.I)();if(""===t.trim())return r.createElement(r.Fragment,null,r.createElement("blockquote",null,"This function does not have a docstring description yet."),r.createElement("br",null)," ",r.createElement("br",null));const a=t;return r.createElement(r.Fragment,null,r.createElement(l.Z,{language:"yaml",style:"dark"===n?i.Z:o.Z},a),r.createElement("br",null))}l.Z.registerLanguage("yaml",a.Z)},47062:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294),l=n(74160);function a(e){let{children:t}=e;if(""===t.trim())return r.createElement("blockquote",null,"This node does not currently have any input parameters.");const n=l.ZP.parse(t);return r.createElement("div",null,r.createElement("h3",null,"Input parameters"),Object.keys(n).map((e=>r.createElement(r.Fragment,null,r.createElement("details",null,r.createElement("summary",{key:e},r.createElement("code",null,e)),r.createElement("ul",null,Object.keys(n[e]).map((t=>r.createElement("li",{key:t},t," : ",JSON.stringify(n[e][t],void 0,4))))))))))}},79267:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),l=n(60614),a=n(49188);function i(e){let{GLink:t,children:n}=e,i=n;if(i.includes('"""')){let e=i.split('"""')[0],t=i.split('"""')[2];i=e.trimEnd()+t.trimStart().replace("\n\n","\n")}return r.createElement("div",null,r.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},r.createElement("h3",{style:{marginBottom:0}},"Python code"),r.createElement("a",{href:`${a.i}/${t}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",r.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},r.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),r.createElement("details",{open:!0},r.createElement(l.Z,{className:"language-python"},i)),r.createElement("br",null))}},91906:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294);function l(){return r.createElement(r.Fragment,null,r.createElement("br",null),r.createElement("br",null),r.createElement("hr",null),r.createElement("br",null),r.createElement("br",null))}},49188:(e,t,n)=>{n.d(t,{i:()=>l,j:()=>r});const r={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},l="https://github.com/flojoy-io/nodes/tree/main"},85704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>O,contentTitle:()=>f,default:()=>b,frontMatter:()=>y,metadata:()=>_,toc:()=>T});var r=n(87462),l=(n(67294),n(3905)),a=n(57685),i=n(79267),o=n(47062),s=n(62605),d=n(91906),m=n(89418);const c="",E='import numpy as np\nfrom flojoy import flojoy, DataContainer\nfrom node_sdk.small_memory import SmallMemory\n\nmemory_key = "SECOND_ORDER_SYSTEM"\n\n\n@flojoy\ndef SECOND_ORDER_SYSTEM(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    # Let\'s first define things that won\'t change over\n    # each iteration: time constants, etc ...\n    d1 = params["d1"]  # first time constant in us, 250\n    d2 = params["d2"]  # second time constant in us, 100\n    node_id = params.get("node_id", 0)\n\n    # ... and now some helper functions\n    x1 = np.exp(-1.0 / d1) if d1 > 0 else 0.0\n    x2 = np.exp(-1.0 / d2) if d2 > 0 else 0.0\n    ac = (1.0 - x1) * (1.0 - x2)\n    bpd = x1 + x2\n    bd = x1 * x2\n\n    # Now we require memory. The only thing we need in memory is the last two\n    # values the system had in this basic example.\n    data = SmallMemory().read_memory(node_id, memory_key)\n    if data is None:\n        initialize = True\n    elif type(data) == np.ndarray:\n        initialize = False\n    else:\n        raise TypeError("Error loading object from REDIS.")\n\n    # We\'re going to store and read the data in reverse order to\n    # how it is accessed here. We will write the functionality\n    # below to assume the most recent time step is the first\n    # index. However, for visualization and external access,\n    # it makes the most sense to have the first time step\n    # as the first index!\n    y_primes = np.zeros((2, 1)) if initialize else data[::-1]\n\n    # Using input from controller as v[0].y ...\n    response = ac * dc_inputs[0].y[-1] + bpd * y_primes[0] - bd * y_primes[1]\n    y_primes[1] = y_primes[0]\n\n    # prepend the most recent result to the front of the histrory\n    y_primes = np.insert(y_primes, 0, response)\n    # We now write to memory, reversing the order ...\n    SmallMemory().write_to_memory(node_id, memory_key, y_primes[::-1])\n    # ... and return the result!\n    return DataContainer(\n        x=dc_inputs[0].y, y=np.ones_like(dc_inputs[0].y) * float(y_primes[0])\n    )  # returns input output pair\n',p="d1:\n  default: 250\n  type: float\nd2:\n  default: 100\n  type: float\n",u="",S="",h="",y={},f=void 0,_={unversionedId:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/SECOND_ORDER_SYSTEM",id:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/SECOND_ORDER_SYSTEM",title:"SECOND_ORDER_SYSTEM",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/SECOND_ORDER_SYSTEM.md",sourceDirName:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM",slug:"/nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/",permalink:"/nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"CONSTANT",permalink:"/nodes/GENERATORS/SIMULATIONS/CONSTANT/"},next:{title:"BAR",permalink:"/nodes/VISUALIZERS/PLOTLY/BAR/"}},O={},T=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],R={toc:T},g="wrapper";function b(e){let{components:t,...n}=e;return(0,l.kt)(g,(0,r.Z)({},R,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(a.Z,{mdxType:"DocString"},c),(0,l.kt)(i.Z,{GLink:"GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/SECOND_ORDER_SYSTEM.py",mdxType:"PythonCode"},E),(0,l.kt)(o.Z,{mdxType:"Parameters"},p),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(s.Z,{GLink:"GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM",nodeLabel:"SECOND_ORDER_SYSTEM",mdxType:"AppDisplay"}),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(m.Z,{index:0,folderPath:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/appendix/",mdxType:"AppendixSection"},u),(0,l.kt)(m.Z,{index:1,folderPath:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/appendix/",mdxType:"AppendixSection"},S),(0,l.kt)(m.Z,{index:2,folderPath:"nodes/GENERATORS/SIMULATIONS/SECOND_ORDER_SYSTEM/appendix/",mdxType:"AppendixSection"},h))}b.isMDXComponent=!0}}]);