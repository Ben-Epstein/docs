"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[5391],{62605:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(67294),o=n(74866),l=n(85162),r=n(11570),i=n(32871),s=n(83599);n(99869);const d=(0,a.memo)((e=>{let{data:t}=e;return a.createElement(a.Fragment,null,a.createElement(r.HH,{type:"target",position:r.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,t.label)),a.createElement(r.HH,{type:"source",position:r.Ly.Right,id:"b"}))}));var c=n(33140),p=n(73091),m=n(2029),u=n(76887),h=n(49188),E=n(92949);const g={default:d},f={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function T(e){let{children:t,data:n,GLink:d}=e;const{colorMode:T}=(0,E.I)();if(!t)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${h.i}/${d}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const b=JSON.parse(t).rfInstance,y="20em";return a.createElement("div",null,a.createElement(o.Z,null,a.createElement(l.Z,{value:"app",label:"App",default:!0},a.createElement(r.tV,null,a.createElement("div",{style:{height:y}},a.createElement(r.x$,{nodes:b.nodes,nodeTypes:g,edges:b.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(i.a,{style:{backgroundColor:"light"===T?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===T?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===T?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(s.A,null))))),a.createElement(l.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:y}},a.createElement(c.k,null,a.createElement(p.E,{label:"x",style:f}),a.createElement(p.E,{dependentAxis:!0,label:"y",style:f}),a.createElement(m.C,{style:{data:{fill:"#7B61FF"}},size:1,data:n})))),a.createElement(l.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:y}},a.createElement(u.L,{data:b})))))}},89418:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),o=n(25365);function l(e){let{children:t,index:n,folderPath:l}=e;const r=["notes.md","hardware.md","media.md"],i=["Theory and technical notes","Parts list and drivers","Media"][n],s="https://github.com/flojoy-io/docs/tree/main/docs/"+l+r[n],d="string"==typeof t&&t.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,i))),d?null:""!==t?a.createElement(o.D,null,t):a.createElement(o.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][n]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:s},"Edit ",r[n]," on GitHub")))),a.createElement("hr",null))}},57685:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294),o=n(5673),l=n(70266),r=n(7284),i=n(85012),s=n(92949);function d(e){let{children:t}=e;const{colorMode:n}=(0,s.I)();if(""===t.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const l=t;return a.createElement(a.Fragment,null,a.createElement(o.Z,{language:"yaml",style:"dark"===n?r.Z:i.Z},l),a.createElement("br",null))}o.Z.registerLanguage("yaml",l.Z)},47062:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),o=n(74160);function l(e){let{children:t}=e;if(""===t.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const n=o.ZP.parse(t);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(n).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(n[e]).map((t=>a.createElement("li",{key:t},t," : ",JSON.stringify(n[e][t],void 0,4))))))))))}},79267:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),o=n(60614),l=n(49188);function r(e){let{GLink:t,children:n}=e,r=n;if(r.includes('"""')){let e=r.split('"""')[0],t=r.split('"""')[2];r=e.trimEnd()+t.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${l.i}/${t}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(o.Z,{className:"language-python"},r)),a.createElement("br",null))}},91906:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294);function o(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,t,n)=>{n.d(t,{i:()=>o,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},o="https://github.com/flojoy-io/nodes/tree/main"},68008:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>I,default:()=>H,frontMatter:()=>y,metadata:()=>P,toc:()=>v});var a=n(87462),o=(n(67294),n(3905)),l=n(57685),r=n(79267),i=n(47062),s=n(62605),d=n(91906),c=n(89418);const p="Declaration of the Event handler, print Voltage variation for a channel",m='from flojoy import flojoy, DataContainer\nimport Phidget22\nfrom Phidget22.Phidget import *\nfrom Phidget22.Devices.VoltageRatioInput import *\n\n\ndef onVoltageRatioChange(self, voltageRatio):\n    \n    print("VoltageRatio [" + str(self.getChannel()) + "]: " + str(voltageRatio))\n\n\n@flojoy\ndef PHIDGET22(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    Pressure Measurement with Phidget 22 sensors\n    voltage: list[float] = []\n    pressions: list[float] = []\n    N = params["n_sensors"]\n\n    for i in range(0, N):\n        # Creation of an instance of the VoltageRationInput class\n        voltageRatioInput = VoltageRatioInput()\n        # Set Channel for Communication with the Phidget Interface Kit :\n        voltageRatioInput.setChannel(i)\n        # Assign the handler that will be called when the event occurs :\n        voltageRatioInput.setOnVoltageRatioChangeHandler(onVoltageRatioChange)\n        # Open the Channel after event handler is set :\n        voltageRatioInput.openWaitForAttachment(5000)\n\n        volt_i: float = (\n            voltageRatioInput.getVoltageRatio()\n        )  # Measure Voltage from the sensor\n        voltage.append(volt_i)  # Add Voltage to the list of measurements\n\n        # Example of a Calibration to convert Voltage into pressions :\n        pression_i: float = (volt_i - params["calibration1"]) / params["calibration2"]\n\n        pressions.append(pression_i)\n\n    return DataContainer(x={"a": voltage, "b": pressions}, y=pressions)\n\n\n@flojoy\ndef PHIDGET22_MOCK(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    Mock Function for the node Phidget 22\n    voltage: list[float] = []\n    pressions: list[float] = []\n    N = 4\n\n    for i in range(0, N):\n        volt_i: int = i * 10 + 4  # Scalar operation to modify data\n        voltage.append(volt_i)  # Add Voltage to the list of measurements\n        pression_i: float = (volt_i - 0.015) / 0.06\n        pressions.append(pression_i)\n\n    return DataContainer(x={"a": voltage, "b": pressions}, y=pressions)\n',u="calibration1:\n  default: 0.015\n  type: float\ncalibration2:\n  default: 0.06\n  type: float\nn_sensors:\n  default: 3\n  type: int\n";var h=n(83324);const E='{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 150,\n                "height": 150,\n                "id": "PHIDGET22-d0424b3f-03be-4cac-8b67-ffbc3571008d",\n                "type": "PHIDGET",\n                "data": {\n                    "id": "PHIDGET22-d0424b3f-03be-4cac-8b67-ffbc3571008d",\n                    "label": "PHIDGET22",\n                    "func": "PHIDGET22",\n                    "type": "PHIDGET",\n                    "ctrls": {\n                        "n_sensors": {\n                            "functionName": "PHIDGET22",\n                            "param": "n_sensors",\n                            "value": 3\n                        },\n                        "calibration1": {\n                            "functionName": "PHIDGET22",\n                            "param": "calibration1",\n                            "value": 0.015\n                        },\n                        "calibration2": {\n                            "functionName": "PHIDGET22",\n                            "param": "calibration2",\n                            "value": 0.06\n                        }\n                    },\n                    "pip_dependencies": [\n                        {\n                            "name": "Phidget22"\n                        }\n                    ],\n                    "selected": false\n                },\n                "position": {\n                    "x": 805.5589512354383,\n                    "y": 209.5153736171739\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 805.5589512354383,\n                    "y": 209.5153736171739\n                },\n                "dragging": true\n            },\n            {\n                "width": 225,\n                "height": 226,\n                "id": "SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8",\n                    "label": "SCATTER",\n                    "func": "SCATTER",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1179.8446655211528,\n                    "y": 160.9439450457453\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1179.8446655211528,\n                    "y": 160.9439450457453\n                },\n                "dragging": true\n            },\n            {\n                "width": 210,\n                "height": 130,\n                "id": "END-164f1210-c01b-4eec-8091-e3d59172ea66",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-164f1210-c01b-4eec-8091-e3d59172ea66",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1585.5589512354384,\n                    "y": 220.94394504574535\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1585.5589512354384,\n                    "y": 220.94394504574535\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "PHIDGET22-d0424b3f-03be-4cac-8b67-ffbc3571008d",\n                "sourceHandle": "main",\n                "target": "SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8",\n                "targetHandle": "SCATTER",\n                "id": "reactflow__edge-PHIDGET22-d0424b3f-03be-4cac-8b67-ffbc3571008dmain-SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8SCATTER"\n            },\n            {\n                "source": "SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8",\n                "sourceHandle": "main",\n                "target": "END-164f1210-c01b-4eec-8091-e3d59172ea66",\n                "targetHandle": "END",\n                "id": "reactflow__edge-SCATTER-e1ca5543-92a9-4adb-8e90-856b4929c2a8main-END-164f1210-c01b-4eec-8091-e3d59172ea66END"\n            }\n        ],\n        "viewport": {\n            "x": 101.96428571428567,\n            "y": 103.24999999999997,\n            "zoom": 0.5\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Slider",\n            "id": "INPUT_PLACEHOLDER",\n            "hidden": false,\n            "minHeight": 1,\n            "minWidth": 2,\n            "layout": {\n                "x": 0,\n                "y": 0,\n                "h": 2,\n                "w": 2,\n                "minH": 1,\n                "minW": 2,\n                "i": "INPUT_PLACEHOLDER"\n            },\n            "param": {\n                "id": "PHIDGET22_PHIDGET22_n_sensors",\n                "functionName": "PHIDGET22",\n                "param": "n_sensors",\n                "nodeId": "PHIDGET22-40ee0d32-7bac-4f5e-af57-419c81c66fab",\n                "inputId": "INPUT_PLACEHOLDER",\n                "type": "int"\n            },\n            "val": 3\n        }\n    ]\n}',g="",f="## Notes and Documentation:\n\n[Phidget Website](https://www.phidgets.com/docs/Main_Page)\n",T="## HARDWARE required:\n\n- [A Phidget InterfaceKit](https://www.phidgets.com/?tier=3&catid=2&pcid=1&prodid=18) (Model 8/8/8 1018_3 is the one we used to develop the node)\n- N pressure sensors(This tutorial will present measurement from [FlexiForce sensor](https://www.phidgets.com/?tier=3&catid=6&pcid=4&prodid=206), but you can use all the Sensors compatible with Phidget.)\n- Connections cables (USB, Electronic cables)\n",b="## Cloudinary Links :\n\n![Phidget-sensor](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998936/flojoy-docs/Phidget22/Phidget22_sensor_somv3v.jpg)\n\n![Phidget-nodes](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998928/flojoy-docs/Phidget22/PHIDGET22_nodeswithloop_fcsmeg.png)\n\n![Phidgets nodes with loop](https://res.cloudinary.com/dhopxs1y3/image/upload/v1681998928/flojoy-docs/Phidget22/PHIDGET22_nodes_frmvux.png)\n",y={},I=void 0,P={unversionedId:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/PHIDGET22",id:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/PHIDGET22",title:"PHIDGET22",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/PHIDGET22.md",sourceDirName:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22",slug:"/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/",permalink:"/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"KEITHLEY2400",permalink:"/nodes/INSTRUMENTS/KEITHLEY/KEITHLEY2400/"},next:{title:"STEPPER_DRIVER_TIC_KNOB",permalink:"/nodes/INSTRUMENTS/STEPPER_MOTOR/STEPPER_DRIVER_TIC_KNOB/"}},D={},v=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],k={toc:v},N="wrapper";function H(e){let{components:t,...n}=e;return(0,o.kt)(N,(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{mdxType:"DocString"},p),(0,o.kt)(r.Z,{GLink:"INSTRUMENTS/PHIDGET/PHIDGET22/PHIDGET22.py",mdxType:"PythonCode"},m),(0,o.kt)(i.Z,{mdxType:"Parameters"},u),(0,o.kt)(d.Z,{mdxType:"SectionBreak"}),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)(s.Z,{data:g,nodeLabel:"PHIDGET22",mdxType:"AppDisplay"},E),(0,o.kt)(h.default,{mdxType:"Example1"}),(0,o.kt)(d.Z,{mdxType:"SectionBreak"}),(0,o.kt)("h2",{id:"appendix"},"Appendix"),(0,o.kt)(c.Z,{index:0,folderPath:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/appendix/",mdxType:"AppendixSection"},f),(0,o.kt)(c.Z,{index:1,folderPath:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/appendix/",mdxType:"AppendixSection"},T),(0,o.kt)(c.Z,{index:2,folderPath:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/appendix/",mdxType:"AppendixSection"},b))}H.isMDXComponent=!0},83324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const l={},r=void 0,i={unversionedId:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1/example",id:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1/example",title:"example",description:"- This is a tutorial for using the node called Phidget 22 and measure pressures from Flexiforce sensors using a Phidget InterfaceKit",source:"@site/docs/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1/example.md",sourceDirName:"nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1",slug:"/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1/example",permalink:"/nodes/INSTRUMENTS/PHIDGET/PHIDGET22/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},s={},d=[],c={toc:d},p="wrapper";function m(e){let{components:t,...l}=e;return(0,o.kt)(p,(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This is a tutorial for using the node called Phidget 22 and measure pressures from Flexiforce sensors using a Phidget InterfaceKit")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware required")," : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Phidget InterfaceKit (Model 8/8/8 1018_3 is the one we used to develop the node)"),(0,o.kt)("li",{parentName:"ul"},"N pressure sensors (This tutorial will present measurement from FlexiForce sensor but you can use all the Sensors compatible with Phidget)."),(0,o.kt)("li",{parentName:"ul"},"Connections cables (USB, Electronic cables)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Software required :")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Flojoy software running (Go to the page -- Getting started/Installation)"),(0,o.kt)("li",{parentName:"ul"},"Phidget 22 PAckage -- (It should be installed automatically from Requirements) (Otherwise follow docs from : ",(0,o.kt)("a",{parentName:"li",href:"https://www.phidgets.com/docs/Main_Page"},"https://www.phidgets.com/docs/Main_Page"),")")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Connection :")," "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Connect the PHIDGET Interfacekit to your computer with an USB Cable"),(0,o.kt)("li",{parentName:"ul"},"Connect the Flexiforce sensors with the Phidget Interfacekit using a Flexiforce adapter (See Image)")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(12890).Z,width:"3024",height:"4032"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Node Management :")," "),(0,o.kt)("p",null,"The PHIDGET22 node doesn't need any data input, so it can be placed on the left on the Flojoy interface : "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(8684).Z,width:"1393",height:"546"})),(0,o.kt)("p",null,"You'll need to set up one numeric parameters in the CRTL panel which is the number of pressure sensors you are using for your experiment.\nNote that the node is measuring voltage from the sensors (The calibration will depend on the type of sensor you are using)"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(10853).Z,width:"481",height:"426"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Calibration :")," "),(0,o.kt)("p",null,"In order to Calibrate your sensor, you'll need to apply some known pressures (3 or 4 is best, and you can use pad sensor to increase the voltage)\nand measure some voltages with the Flojoy application.\nFrom these measurements you deduce the relation between the voltage and the pressure applied on the sensor, and you can use operationnal\nnodes in order to convert voltage into pressures."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Visualisation :")," "),(0,o.kt)("p",null,"After that you can choose your Visualisation node that fits your project to display the pressure measurements as you want.  "),(0,o.kt)("p",null,"Also, you can use the loop node (See documentation) in order to update the measurements, you can set the parameters you want for the loops\n(Delay, number of loops, etc..) "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(70733).Z,width:"1280",height:"487"})))}m.isMDXComponent=!0},10853:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PHIDGET22_ctrl-276bf577ddf6ab49eab6e6ec957f0f9a.png"},8684:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PHIDGET22_nodes-7a8bb0539b168dc6d81441813f4ff808.png"},70733:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PHIDGET22_nodeswithloop-a3a2b83337d1e6d02a6b62d8143b4ea8.png"},12890:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Phidget22_sensor-90619b4a952ae5f3de51d489bb315565.jpg"}}]);