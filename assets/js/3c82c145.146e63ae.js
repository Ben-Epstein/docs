"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[1897],{62605:(e,n,t)=>{t.d(n,{Z:()=>_});var a=t(67294),l=t(74866),r=t(85162),i=t(11570),o=t(32871),d=t(83599);t(99869);const s=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(i.HH,{type:"target",position:i.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(i.HH,{type:"source",position:i.Ly.Right,id:"b"}))}));var p=t(33140),c=t(73091),m=t(2029),u=t(76887),E=t(49188),L=t(92949);const f={default:s},h={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function _(e){let{children:n,data:t,GLink:s}=e;const{colorMode:_}=(0,L.I)();if(!n)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${E.i}/${s}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const g=JSON.parse(n).rfInstance,y="20em";return a.createElement("div",null,a.createElement(l.Z,null,a.createElement(r.Z,{value:"app",label:"App",default:!0},a.createElement(i.tV,null,a.createElement("div",{style:{height:y}},a.createElement(i.x$,{nodes:g.nodes,nodeTypes:f,edges:g.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(o.a,{style:{backgroundColor:"light"===_?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===_?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===_?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(d.A,null))))),a.createElement(r.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:y}},a.createElement(p.k,null,a.createElement(c.E,{label:"x",style:h}),a.createElement(c.E,{dependentAxis:!0,label:"y",style:h}),a.createElement(m.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),a.createElement(r.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:y}},a.createElement(u.L,{data:g})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(25365);function r(e){let{children:n,index:t,folderPath:r}=e;const i=["notes.md","hardware.md","media.md"],o=["Theory and technical notes","Parts list and drivers","Media"][t],d="https://github.com/flojoy-io/docs/tree/main/docs/"+r+i[t],s="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,o))),s?null:""!==n?a.createElement(l.D,null,n):a.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:d},"Edit ",i[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(67294),l=t(5673),r=t(70266),i=t(7284),o=t(85012),d=t(92949);function s(e){let{children:n}=e;const{colorMode:t}=(0,d.I)();if(""===n.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const r=n;return a.createElement(a.Fragment,null,a.createElement(l.Z,{language:"yaml",style:"dark"===t?i.Z:o.Z},r),a.createElement("br",null))}l.Z.registerLanguage("yaml",r.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(74160);function r(e){let{children:n}=e;if(""===n.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=l.ZP.parse(n);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(t[e]).map((n=>a.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),l=t(60614),r=t(49188);function i(e){let{GLink:n,children:t}=e,i=t;if(i.includes('"""')){let e=i.split('"""')[0],n=i.split('"""')[2];i=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${r.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(l.Z,{className:"language-python"},i)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294);function l(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>l,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},l="https://github.com/flojoy-io/nodes/tree/main"},80472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>O,contentTitle:()=>A,default:()=>S,frontMatter:()=>y,metadata:()=>b,toc:()=>C});var a=t(87462),l=(t(67294),t(3905)),r=t(57685),i=t(79267),o=t(47062),d=t(62605),s=t(91906),p=t(89418);const c="The LOCAL_FILE node loads a local file of different type and converts it to a DataContainer class.\n\n    Parameters\n    ----------\n    file_type : str\n        type of file to load, default: image.\n    file_path : str\n        path to the file to be loaded.\n\n    Returns:\n    --------\n    DataContainer:\n        type 'image' for file_type 'image'\n\n        type 'dataframe' for file_type 'json', 'csv', 'excel', 'xml'\n\n    ",m='from flojoy import flojoy, DataContainer, JobResultBuilder\nfrom typing import Union\nimport numpy as np\nfrom PIL import Image\nfrom os import path\nimport pandas as pd\n\n\ndef get_file_path(file_path: str, default_path: str = None) -> str:\n    if default_path is None and file_path == "":\n        raise ValueError("File path is missing for file_path parameter!")\n    f_path = file_path if file_path != "" else default_path\n    print(f"file will be loaded from {f_path}")\n    return f_path\n\n\n@flojoy\ndef LOCAL_FILE(\n    dc_inputs: list[DataContainer], params: dict\n) -> Union[DataContainer, dict]:\n    \n    file_type: str = params["file_type"]\n    file_path: str = params["path"]\n    match file_type:\n        case "image":\n            default_image_path = path.join(\n                path.dirname(path.abspath(__file__)),\n                "assets",\n                "astronaut.png",\n            )\n            file_path = get_file_path(file_path, default_image_path)\n            f = Image.open(file_path)\n            img_array = np.array(f.convert("RGBA"))\n            red_channel = img_array[:, :, 0]\n            green_channel = img_array[:, :, 1]\n            blue_channel = img_array[:, :, 2]\n            if img_array.shape[2] == 4:\n                alpha_channel = img_array[:, :, 3]\n            else:\n                alpha_channel = None\n            return DataContainer(\n                type="image",\n                r=red_channel,\n                g=green_channel,\n                b=blue_channel,\n                a=alpha_channel,\n            )\n        case "csv":\n            file_path = get_file_path(file_path)\n            df = pd.read_csv(file_path)\n            return DataContainer(type="dataframe", m=df)\n        case "json":\n            file_path = get_file_path(file_path)\n            df = pd.read_json(file_path)\n            return DataContainer(type="dataframe", m=df)\n        case "xml":\n            file_path = get_file_path(file_path)\n            df = pd.read_xml(file_path)\n            return DataContainer(type="dataframe", m=df)\n        case "excel":\n            file_path = get_file_path(file_path)\n            df = pd.read_excel(file_path)\n            return DataContainer(type="dataframe", m=df)\n        case _:\n            raise ValueError(\n                f"LOCAL_FILE currently doesn\'t support file type : {file_type}"\n            )\n',u="file_type:\n  default: image\n  options:\n  - image\n  - csv\n  - json\n  - xml\n  - excel\n  type: select\npath:\n  default: ''\n  type: string\n";var E=t(90075);const L='{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 150,\n                "height": 150,\n                "id": "LOCAL_FILE-a9259621-d3ed-4459-b347-ea5c7598ef23",\n                "type": "LOCAL_FILE_SYSTEM",\n                "data": {\n                    "id": "LOCAL_FILE-a9259621-d3ed-4459-b347-ea5c7598ef23",\n                    "label": "LOCAL FILE",\n                    "func": "LOCAL_FILE",\n                    "type": "LOCAL_FILE_SYSTEM",\n                    "ctrls": {\n                        "file_type": {\n                            "functionName": "LOCAL_FILE",\n                            "param": "file_type",\n                            "value": "image"\n                        },\n                        "path": {\n                            "functionName": "LOCAL_FILE",\n                            "param": "path",\n                            "value": ""\n                        }\n                    },\n                    "pip_dependencies": [\n                        {\n                            "name": "xlrd"\n                        },\n                        {\n                            "name": "lxml"\n                        }\n                    ],\n                    "selected": false\n                },\n                "position": {\n                    "x": 67.02657239815413,\n                    "y": 171.76799388036227\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 67.02657239815413,\n                    "y": 171.76799388036227\n                },\n                "dragging": true\n            },\n            {\n                "width": 225,\n                "height": 226,\n                "id": "IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1",\n                    "label": "IMAGE",\n                    "func": "IMAGE",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 439.8837152552969,\n                    "y": 121.76799388036227\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 439.8837152552969,\n                    "y": 121.76799388036227\n                },\n                "dragging": true\n            },\n            {\n                "width": 210,\n                "height": 130,\n                "id": "END-d131e64e-8c1d-4f55-8e84-98d961a8d6b6",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-d131e64e-8c1d-4f55-8e84-98d961a8d6b6",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": true\n                },\n                "position": {\n                    "x": 921.3122866838686,\n                    "y": 177.48227959464788\n                },\n                "selected": true,\n                "positionAbsolute": {\n                    "x": 921.3122866838686,\n                    "y": 177.48227959464788\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "LOCAL_FILE-a9259621-d3ed-4459-b347-ea5c7598ef23",\n                "sourceHandle": "main",\n                "target": "IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1",\n                "targetHandle": "IMAGE",\n                "id": "reactflow__edge-LOCAL_FILE-a9259621-d3ed-4459-b347-ea5c7598ef23main-IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1IMAGE"\n            },\n            {\n                "source": "IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1",\n                "sourceHandle": "main",\n                "target": "END-d131e64e-8c1d-4f55-8e84-98d961a8d6b6",\n                "targetHandle": "END",\n                "id": "reactflow__edge-IMAGE-97314e7b-4d8a-4837-b94d-9259c14c2bc1main-END-d131e64e-8c1d-4f55-8e84-98d961a8d6b6END"\n            }\n        ],\n        "viewport": {\n            "x": 226.6796457828928,\n            "y": 31.056018042519327,\n            "zoom": 0.6853504029717089\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Slider",\n            "id": "INPUT_PLACEHOLDER",\n            "hidden": false,\n            "minHeight": 1,\n            "minWidth": 2,\n            "layout": {\n                "x": 0,\n                "y": 0,\n                "h": 2,\n                "w": 2,\n                "minH": 1,\n                "minW": 2,\n                "i": "INPUT_PLACEHOLDER"\n            }\n        }\n    ]\n}',f="",h="",_="",g="",y={},A=void 0,b={unversionedId:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE",id:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE",title:"LOCAL_FILE",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE.md",sourceDirName:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE",slug:"/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/",permalink:"/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"READ_CSV",permalink:"/nodes/EXTRACTORS/FILE/READ_CSV/"},next:{title:"OPEN_MATLAB",permalink:"/nodes/LOADERS/LOCAL_FILE_SYSTEM/OPEN_MATLAB/"}},O={},C=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],I={toc:C},x="wrapper";function S(e){let{components:n,...t}=e;return(0,l.kt)(x,(0,a.Z)({},I,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{mdxType:"DocString"},c),(0,l.kt)(i.Z,{GLink:"LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE.py",mdxType:"PythonCode"},m),(0,l.kt)(o.Z,{mdxType:"Parameters"},u),(0,l.kt)(s.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(d.Z,{data:f,nodeLabel:"LOCAL_FILE",mdxType:"AppDisplay"},L),(0,l.kt)(E.default,{mdxType:"Example1"}),(0,l.kt)(s.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(p.Z,{index:0,folderPath:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/appendix/",mdxType:"AppendixSection"},h),(0,l.kt)(p.Z,{index:1,folderPath:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/appendix/",mdxType:"AppendixSection"},_),(0,l.kt)(p.Z,{index:2,folderPath:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/appendix/",mdxType:"AppendixSection"},g))}S.isMDXComponent=!0},90075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=t(87462),l=(t(67294),t(3905));const r={},i=void 0,o={unversionedId:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1/example",id:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1/example",title:"example",description:"In this example LOCAL_FILE node is loading a default astronaut image which is then visualized with a plotly visulizer node IMAGE.",source:"@site/docs/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1/example.md",sourceDirName:"nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1",slug:"/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1/example",permalink:"/nodes/LOADERS/LOCAL_FILE_SYSTEM/LOCAL_FILE/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},d={},s=[{value:"Output in debug panel",id:"output-in-debug-panel",level:3}],p={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this example ",(0,l.kt)("inlineCode",{parentName:"p"},"LOCAL_FILE")," node is loading a default astronaut image which is then visualized with a plotly visulizer node ",(0,l.kt)("inlineCode",{parentName:"p"},"IMAGE"),". "),(0,l.kt)("h3",{id:"output-in-debug-panel"},"Output in debug panel"),(0,l.kt)("p",null,"This is how it looks in debug panel after script run"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/dm5f4kpjf/image/upload/v1686167126/Screenshot_52_wash9i.png",alt:"debug-panel-local-file"})))}m.isMDXComponent=!0}}]);