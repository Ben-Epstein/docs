"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[2646],{62605:(e,t,n)=>{n.d(t,{Z:()=>I});var a=n(67294),l=n(74866),r=n(85162),i=n(11570),o=n(32871),s=n(83599);n(99869);const d=(0,a.memo)((e=>{let{data:t}=e;return a.createElement(a.Fragment,null,a.createElement(i.HH,{type:"target",position:i.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,t.label)),a.createElement(i.HH,{type:"source",position:i.Ly.Right,id:"b"}))}));var c=n(33140),m=n(73091),u=n(2029),p=n(76887),E=n(49188),h=n(92949);const y={default:d},T={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function I(e){let{children:t,data:n,GLink:d}=e;const{colorMode:I}=(0,h.I)();if(!t)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${E.i}/${d}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const R=JSON.parse(t).rfInstance,f="20em";return a.createElement("div",null,a.createElement(l.Z,null,a.createElement(r.Z,{value:"app",label:"App",default:!0},a.createElement(i.tV,null,a.createElement("div",{style:{height:f}},a.createElement(i.x$,{nodes:R.nodes,nodeTypes:y,edges:R.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(o.a,{style:{backgroundColor:"light"===I?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===I?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===I?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(s.A,null))))),a.createElement(r.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:f}},a.createElement(c.k,null,a.createElement(m.E,{label:"x",style:T}),a.createElement(m.E,{dependentAxis:!0,label:"y",style:T}),a.createElement(u.C,{style:{data:{fill:"#7B61FF"}},size:1,data:n})))),a.createElement(r.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:f}},a.createElement(p.L,{data:R})))))}},89418:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),l=n(25365);function r(e){let{children:t,index:n,folderPath:r}=e;const i=["notes.md","hardware.md","media.md"],o=["Theory and technical notes","Parts list and drivers","Media"][n],s="https://github.com/flojoy-io/docs/tree/main/docs/"+r+i[n],d="string"==typeof t&&t.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,o))),d?null:""!==t?a.createElement(l.D,null,t):a.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][n]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:s},"Edit ",i[n]," on GitHub")))),a.createElement("hr",null))}},57685:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294),l=n(5673),r=n(70266),i=n(7284),o=n(85012),s=n(92949);function d(e){let{children:t}=e;const{colorMode:n}=(0,s.I)();if(""===t.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const r=t;return a.createElement(a.Fragment,null,a.createElement(l.Z,{language:"yaml",style:"dark"===n?i.Z:o.Z},r),a.createElement("br",null))}l.Z.registerLanguage("yaml",r.Z)},47062:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),l=n(74160);function r(e){let{children:t}=e;if(""===t.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const n=l.ZP.parse(t);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(n).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(n[e]).map((t=>a.createElement("li",{key:t},t," : ",JSON.stringify(n[e][t],void 0,4))))))))))}},79267:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),l=n(60614),r=n(49188);function i(e){let{GLink:t,children:n}=e,i=n;if(i.includes('"""')){let e=i.split('"""')[0],t=i.split('"""')[2];i=e.trimEnd()+t.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${r.i}/${t}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(l.Z,{className:"language-python"},i)),a.createElement("br",null))}},91906:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294);function l(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,t,n)=>{n.d(t,{i:()=>l,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},l="https://github.com/flojoy-io/nodes/tree/main"},73382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>I,default:()=>b,frontMatter:()=>T,metadata:()=>R,toc:()=>N});var a=n(87462),l=(n(67294),n(3905)),r=n(57685),i=n(79267),o=n(47062),s=n(62605),d=n(91906),c=n(89418);const m="Takes 2 inputs, one matrix and one rcond if not square matrix.\n    Inverts them (or pseudo invert) and returns the result.\n    If the entered value is a scalar it returns the multiplciative\n    inverse 1/x",u='import numpy as np\nfrom flojoy import flojoy, DataContainer\n\n\n@flojoy\ndef INVERT(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    \n    print(f"INVERT params: {params}")\n    a = np.eye(3)\n    b: float = params["rcond"]\n\n    if dc_inputs.__len__ > 0:\n        if (\n            dc_inputs[0].type == "ordered_pair"\n        ):  # v[0] is a DataContainer object with type attribute\n            print("Performing simple inversion")\n            a = dc_inputs[0].y  # scalar valued\n            return DataContainer(x=a, y=1 / a)\n        elif dc_inputs[0].type == "matrix":\n            a = dc_inputs[0].m\n            if not a.shape[0] == a.shape[1]:\n                print("Not square matrix! Using pseudoinversion...")\n                assert (\n                    type(b) == float\n                ), "Need scalar value to compare SVDs for pseudoinversion"\n                retval = np.linalg.pinv(a, rcond=b, hermitian=False)\n            else:\n                try:\n                    retval = np.linalg.inv(a)\n                except np.linalg.LinAlgError:\n                    raise ValueError("Inversion failed! Singular matrix returned...")\n            return DataContainer(type="matrix", m=retval)\n        else:\n            raise ValueError("Incorrect input DataContainer type.")\n    else:\n        return DataContainer(type="matrix", m=np.eye(3))\n',p="rcond:\n  default: 1.0\n  type: float\n",E="",h="",y="",T={},I=void 0,R={unversionedId:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/INVERT",id:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/INVERT",title:"INVERT",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/INVERT.md",sourceDirName:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT",slug:"/nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/",permalink:"/nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"MATMUL",permalink:"/nodes/TRANSFORMERS/MATRIX_MANIPULATION/MATMUL/"},next:{title:"IMAGE_SMOOTHING",permalink:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/IMAGE_SMOOTHING/"}},f={},N=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],A={toc:N},g="wrapper";function b(e){let{components:t,...n}=e;return(0,l.kt)(g,(0,a.Z)({},A,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{mdxType:"DocString"},m),(0,l.kt)(i.Z,{GLink:"TRANSFORMERS/MATRIX_MANIPULATION/INVERT/INVERT.py",mdxType:"PythonCode"},u),(0,l.kt)(o.Z,{mdxType:"Parameters"},p),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(s.Z,{GLink:"TRANSFORMERS/MATRIX_MANIPULATION/INVERT",nodeLabel:"INVERT",mdxType:"AppDisplay"}),(0,l.kt)(d.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(c.Z,{index:0,folderPath:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/appendix/",mdxType:"AppendixSection"},E),(0,l.kt)(c.Z,{index:1,folderPath:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/appendix/",mdxType:"AppendixSection"},h),(0,l.kt)(c.Z,{index:2,folderPath:"nodes/TRANSFORMERS/MATRIX_MANIPULATION/INVERT/appendix/",mdxType:"AppendixSection"},y))}b.isMDXComponent=!0}}]);