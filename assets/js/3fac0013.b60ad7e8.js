"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[2613],{62605:(e,n,t)=>{t.d(n,{Z:()=>O});var a=t(67294),l=t(74866),r=t(85162),o=t(11570),d=t(32871),i=t(83599);t(99869);const c=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(o.HH,{type:"target",position:o.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(o.HH,{type:"source",position:o.Ly.Right,id:"b"}))}));var s=t(33140),m=t(73091),p=t(2029),u=t(76887),E=t(49188),f=t(92949);const N={default:c},h={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function O(e){let{children:n,data:t,GLink:c}=e;const{colorMode:O}=(0,f.I)();if(!n)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${E.i}/${c}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const T=JSON.parse(n).rfInstance,y="20em";return a.createElement("div",null,a.createElement(l.Z,null,a.createElement(r.Z,{value:"app",label:"App",default:!0},a.createElement(o.tV,null,a.createElement("div",{style:{height:y}},a.createElement(o.x$,{nodes:T.nodes,nodeTypes:N,edges:T.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(d.a,{style:{backgroundColor:"light"===O?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===O?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===O?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(i.A,null))))),a.createElement(r.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:y}},a.createElement(s.k,null,a.createElement(m.E,{label:"x",style:h}),a.createElement(m.E,{dependentAxis:!0,label:"y",style:h}),a.createElement(p.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),a.createElement(r.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:y}},a.createElement(u.L,{data:T})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(25365);function r(e){let{children:n,index:t,folderPath:r}=e;const o=["notes.md","hardware.md","media.md"],d=["Theory and technical notes","Parts list and drivers","Media"][t],i="https://github.com/flojoy-io/docs/tree/main/docs/"+r+o[t],c="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,d))),c?null:""!==n?a.createElement(l.D,null,n):a.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:i},"Edit ",o[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(67294),l=t(5673),r=t(70266),o=t(7284),d=t(85012),i=t(92949);function c(e){let{children:n}=e;const{colorMode:t}=(0,i.I)();if(""===n.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const r=n;return a.createElement(a.Fragment,null,a.createElement(l.Z,{language:"yaml",style:"dark"===t?o.Z:d.Z},r),a.createElement("br",null))}l.Z.registerLanguage("yaml",r.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(74160);function r(e){let{children:n}=e;if(""===n.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=l.ZP.parse(n);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(t[e]).map((n=>a.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294),l=t(60614),r=t(49188);function o(e){let{GLink:n,children:t}=e,o=t;if(o.includes('"""')){let e=o.split('"""')[0],n=o.split('"""')[2];o=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${r.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(l.Z,{className:"language-python"},o)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294);function l(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>l,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},l="https://github.com/flojoy-io/nodes/tree/main"},35704:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>I,default:()=>L,frontMatter:()=>y,metadata:()=>g,toc:()=>A});var a=t(87462),l=(t(67294),t(3905)),r=t(57685),o=t(79267),d=t(47062),i=t(62605),c=t(91906),s=t(89418);const m="The ONE_HOT_ENCODING node creates a one hot encoding from a list of categorical features.\n    The `categories` parameter can be used to generate a one hot encoding without having to pass a dataframe.\n    By default, all categorical columns in the input dataframe will be encoded. The `columns`\n    parameter can be used to specify the columns to encode.\n\n    Parameters\n    ----------\n    categories : list of str or list of int, optional\n    columns: list of str, optional\n\n    Returns\n    -------\n    matrix\n        The one hot encoding of the input features.\n    ",p='from flojoy import flojoy, DataContainer\nimport pandas as pd\n\n\n@flojoy\ndef ONE_HOT_ENCODING(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    \n\n    dc = dc_inputs[0] if len(dc_inputs) > 0 else None\n\n    if dc is not None and dc.type != "dataframe":\n        raise ValueError(\n            f"unsupported DataContainer type passed to ONE_HOT_ENCODING node: \'{dc.type}\'"\n        )\n\n    categories = params.get("categories", [])\n    columns = params.get("columns", [])\n\n    if categories:\n        data = pd.DataFrame({"category": categories})\n        # Force pandas to treat the column as categorical\n        data["category"] = data["category"].astype("category")\n        encoded = pd.get_dummies(data, dtype=int)\n\n        return DataContainer(type="dataframe", m=encoded)\n\n    if not dc:\n        raise ValueError(f"ONE_HOT_ENCODING node did not receive input DataContainer")\n\n    if columns:\n        encoded = pd.get_dummies(dc.m[columns])\n    else:\n        cat_df = dc.m.select_dtypes(include=["object", "category"])\n        encoded = pd.get_dummies(cat_df, dtype=int)\n\n    return DataContainer(type="dataframe", m=encoded)\n',u="categories:\n  default: ''\n  type: array\ncolumns:\n  default: ''\n  type: array\n";var E=t(7799);const f='{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 150,\n                "height": 150,\n                "id": "ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffa",\n                "type": "CLASSIFICATION",\n                "data": {\n                    "id": "ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffa",\n                    "label": "ONE HOT ENCODING",\n                    "func": "ONE_HOT_ENCODING",\n                    "type": "CLASSIFICATION",\n                    "ctrls": {\n                        "categories": {\n                            "functionName": "ONE_HOT_ENCODING",\n                            "param": "categories",\n                            "value": ""\n                        },\n                        "columns": {\n                            "functionName": "ONE_HOT_ENCODING",\n                            "param": "columns",\n                            "value": "smoker,day"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 492.2217042786417,\n                    "y": 150.33145519440131\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 492.2217042786417,\n                    "y": 150.33145519440131\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 150,\n                "id": "PLOTLY_DATASET-3ec5e34e-b56a-4779-a8cd-e5e1c01d1689",\n                "type": "SAMPLE_DATASET",\n                "data": {\n                    "id": "PLOTLY_DATASET-3ec5e34e-b56a-4779-a8cd-e5e1c01d1689",\n                    "label": "PLOTLY DATASET",\n                    "func": "PLOTLY_DATASET",\n                    "type": "SAMPLE_DATASET",\n                    "ctrls": {\n                        "dataset_key": {\n                            "functionName": "PLOTLY_DATASET",\n                            "param": "dataset_key",\n                            "value": "tips"\n                        }\n                    },\n                    "selected": true\n                },\n                "position": {\n                    "x": 165.0788471357846,\n                    "y": 147.47431233725848\n                },\n                "selected": true,\n                "positionAbsolute": {\n                    "x": 165.0788471357846,\n                    "y": 147.47431233725848\n                },\n                "dragging": true\n            },\n            {\n                "width": 380,\n                "height": 293,\n                "id": "TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261",\n                    "label": "TABLE",\n                    "func": "TABLE",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 727.9359899929276,\n                    "y": 101.7600266229727\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 727.9359899929276,\n                    "y": 101.7600266229727\n                },\n                "dragging": true\n            },\n            {\n                "width": 210,\n                "height": 130,\n                "id": "END-de791708-214d-46a3-a334-af3b779d7b49",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-de791708-214d-46a3-a334-af3b779d7b49",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1133.650275707213,\n                    "y": 167.47431233725848\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1133.650275707213,\n                    "y": 167.47431233725848\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "PLOTLY_DATASET-3ec5e34e-b56a-4779-a8cd-e5e1c01d1689",\n                "sourceHandle": "main",\n                "target": "ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffa",\n                "targetHandle": "ONE_HOT_ENCODING",\n                "id": "reactflow__edge-PLOTLY_DATASET-3ec5e34e-b56a-4779-a8cd-e5e1c01d1689main-ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffaONE_HOT_ENCODING"\n            },\n            {\n                "source": "ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffa",\n                "sourceHandle": "main",\n                "target": "TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261",\n                "targetHandle": "TABLE",\n                "id": "reactflow__edge-ONE_HOT_ENCODING-b15db30d-818c-4c14-b6a9-2ecc0d76fffamain-TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261TABLE"\n            },\n            {\n                "source": "TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261",\n                "sourceHandle": "main",\n                "target": "END-de791708-214d-46a3-a334-af3b779d7b49",\n                "targetHandle": "END",\n                "id": "reactflow__edge-TABLE-a7e5677c-e1cd-466d-a3ec-36742974d261main-END-de791708-214d-46a3-a334-af3b779d7b49END"\n            }\n        ],\n        "viewport": {\n            "x": 34.964285714285666,\n            "y": 190.74999999999997,\n            "zoom": 0.5\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Slider",\n            "id": "INPUT_PLACEHOLDER",\n            "hidden": false,\n            "minHeight": 1,\n            "minWidth": 2,\n            "layout": {\n                "x": 0,\n                "y": 0,\n                "h": 2,\n                "w": 2,\n                "minH": 1,\n                "minW": 2,\n                "i": "INPUT_PLACEHOLDER"\n            }\n        }\n    ]\n}\n',N="",h="",O="",T="",y={},I=void 0,g={unversionedId:"nodes/AI_ML/CLASSIFICATION/ONE_HOT_ENCODING",id:"nodes/AI_ML/CLASSIFICATION/ONE_HOT_ENCODING",title:"ONE_HOT_ENCODING",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/AI_ML/CLASSIFICATION/ONE_HOT_ENCODING.md",sourceDirName:"nodes/AI_ML/CLASSIFICATION",slug:"/nodes/AI_ML/CLASSIFICATION/ONE_HOT_ENCODING",permalink:"/nodes/AI_ML/CLASSIFICATION/ONE_HOT_ENCODING",draft:!1,tags:[],version:"current",frontMatter:{}},_={},A=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],b={toc:A},C="wrapper";function L(e){let{components:n,...t}=e;return(0,l.kt)(C,(0,a.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{mdxType:"DocString"},m),(0,l.kt)(o.Z,{GLink:"AI_ML/CLASSIFICATION/ONE_HOT_ENCODING.py",mdxType:"PythonCode"},p),(0,l.kt)(d.Z,{mdxType:"Parameters"},u),(0,l.kt)(c.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(i.Z,{data:N,nodeLabel:"ONE_HOT_ENCODING",mdxType:"AppDisplay"},f),(0,l.kt)(E.default,{mdxType:"Example1"}),(0,l.kt)(c.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(s.Z,{index:0,folderPath:"nodes/AI_ML/CLASSIFICATION/appendix/",mdxType:"AppendixSection"},h),(0,l.kt)(s.Z,{index:1,folderPath:"nodes/AI_ML/CLASSIFICATION/appendix/",mdxType:"AppendixSection"},O),(0,l.kt)(s.Z,{index:2,folderPath:"nodes/AI_ML/CLASSIFICATION/appendix/",mdxType:"AppendixSection"},T))}L.isMDXComponent=!0},7799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var a=t(87462),l=(t(67294),t(3905));const r={},o=void 0,d={unversionedId:"nodes/AI_ML/CLASSIFICATION/examples/EX1/example",id:"nodes/AI_ML/CLASSIFICATION/examples/EX1/example",title:"example",description:"In this example, ONEHOTENCODING is passed the tips dataset from the PLOTLY_DATASET node.",source:"@site/docs/nodes/AI_ML/CLASSIFICATION/examples/EX1/example.md",sourceDirName:"nodes/AI_ML/CLASSIFICATION/examples/EX1",slug:"/nodes/AI_ML/CLASSIFICATION/examples/EX1/example",permalink:"/nodes/AI_ML/CLASSIFICATION/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},i={},c=[],s={toc:c},m="wrapper";function p(e){let{components:n,...t}=e;return(0,l.kt)(m,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this example, ",(0,l.kt)("inlineCode",{parentName:"p"},"ONE_HOT_ENCODING")," is passed the ",(0,l.kt)("inlineCode",{parentName:"p"},"tips")," dataset from the ",(0,l.kt)("inlineCode",{parentName:"p"},"PLOTLY_DATASET")," node."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ONE_HOT_ENCODING")," is passed ",(0,l.kt)("inlineCode",{parentName:"p"},"smoker,day")," for the ",(0,l.kt)("inlineCode",{parentName:"p"},"columns")," parameter, so the output consists of a dataframe with one hot encodings for only the ",(0,l.kt)("inlineCode",{parentName:"p"},"smoker")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"day")," columns from the input dataset."))}p.isMDXComponent=!0}}]);