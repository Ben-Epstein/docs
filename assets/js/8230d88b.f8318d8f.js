"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[772],{62605:(e,n,t)=>{t.d(n,{Z:()=>L});var r=t(67294),a=t(74866),l=t(85162),o=t(11570),i=t(32871),s=t(83599);t(99869);const d=(0,r.memo)((e=>{let{data:n}=e;return r.createElement(r.Fragment,null,r.createElement(o.HH,{type:"target",position:o.Ly.Left,style:{background:"#555"}}),r.createElement("div",null,r.createElement("strong",null,n.label)),r.createElement(o.HH,{type:"source",position:o.Ly.Right,id:"b"}))}));var _=t(33140),c=t(73091),E=t(2029),m=t(76887),p=t(49188),u=t(92949);const A={default:d},h={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function L(e){let{children:n,data:t,GLink:d}=e;const{colorMode:L}=(0,u.I)();if(!n)return r.createElement(r.Fragment,null,r.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",r.createElement("a",{href:`${p.i}/${d}`,target:"_blank"},"here")),r.createElement("br",null)," ",r.createElement("br",null));const y=JSON.parse(n).rfInstance,I="20em";return r.createElement("div",null,r.createElement(a.Z,null,r.createElement(l.Z,{value:"app",label:"App",default:!0},r.createElement(o.tV,null,r.createElement("div",{style:{height:I}},r.createElement(o.x$,{nodes:y.nodes,nodeTypes:A,edges:y.edges,fitView:!0,proOptions:{hideAttribution:!0}},r.createElement(i.a,{style:{backgroundColor:"light"===L?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===L?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===L?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),r.createElement(s.A,null))))),r.createElement(l.Z,{value:"output",label:"Output"},r.createElement("div",{style:{minHeight:I}},r.createElement(_.k,null,r.createElement(c.E,{label:"x",style:h}),r.createElement(c.E,{dependentAxis:!0,label:"y",style:h}),r.createElement(E.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),r.createElement(l.Z,{value:"spec",label:"App JSON spec"},r.createElement("div",{style:{minHeight:I}},r.createElement(m.L,{data:y})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(67294),a=t(25365);function l(e){let{children:n,index:t,folderPath:l}=e;const o=["notes.md","hardware.md","media.md"],i=["Theory and technical notes","Parts list and drivers","Media"][t],s="https://github.com/flojoy-io/docs/tree/main/docs/"+l+o[t],d="string"==typeof n&&n.includes("Driver doc :");return r.createElement(r.Fragment,null,r.createElement("br",null),r.createElement("details",null,r.createElement("summary",null,r.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},r.createElement("h4",null,i))),d?null:""!==n?r.createElement(a.D,null,n):r.createElement(a.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),r.createElement("br",null),r.createElement("small",null,r.createElement("i",null,r.createElement("a",{href:s},"Edit ",o[t]," on GitHub")))),r.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(67294),a=t(5673),l=t(70266),o=t(7284),i=t(85012),s=t(92949);function d(e){let{children:n}=e;const{colorMode:t}=(0,s.I)();if(""===n.trim())return r.createElement(r.Fragment,null,r.createElement("blockquote",null,"This function does not have a docstring description yet."),r.createElement("br",null)," ",r.createElement("br",null));const l=n;return r.createElement(r.Fragment,null,r.createElement(a.Z,{language:"yaml",style:"dark"===t?o.Z:i.Z},l),r.createElement("br",null))}a.Z.registerLanguage("yaml",l.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(67294),a=t(74160);function l(e){let{children:n}=e;if(""===n.trim())return r.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=a.ZP.parse(n);return r.createElement("div",null,r.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>r.createElement(r.Fragment,null,r.createElement("details",null,r.createElement("summary",{key:e},r.createElement("code",null,e)),r.createElement("ul",null,Object.keys(t[e]).map((n=>r.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(67294),a=t(60614),l=t(49188);function o(e){let{GLink:n,children:t}=e,o=t;if(o.includes('"""')){let e=o.split('"""')[0],n=o.split('"""')[2];o=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return r.createElement("div",null,r.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},r.createElement("h3",{style:{marginBottom:0}},"Python code"),r.createElement("a",{href:`${l.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",r.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},r.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),r.createElement("details",{open:!0},r.createElement(a.Z,{className:"language-python"},o)),r.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(67294);function a(){return r.createElement(r.Fragment,null,r.createElement("br",null),r.createElement("br",null),r.createElement("hr",null),r.createElement("br",null),r.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>a,j:()=>r});const r={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},a="https://github.com/flojoy-io/nodes/tree/main"},78771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>L,default:()=>b,frontMatter:()=>h,metadata:()=>y,toc:()=>S});var r=t(87462),a=(t(67294),t(3905)),l=t(57685),o=t(79267),i=t(47062),s=t(62605),d=t(91906),_=t(89418);const c="",E='from flojoy import flojoy, DataContainer\nimport plotly.graph_objects as go\nimport numpy as np\n\n\nCELL_SIZE = 50\nFONT_SIZE = 10\nMAX_ALLOWED_SHAPE = 10\nMIN_ALLOWED_SHAPE = 4\nv_dot = "$\\\\vdots$"\nd_dot = "$\\\\ddots$"\nl_dot = "$\\\\ldots$"\n\n\ndef numpy_2d_array_as_table(\n    arr: np.ndarray,\n    arr_shape: int,\n    placeholder: str,\n):\n    new_arr = arr\n    if arr_shape > MAX_ALLOWED_SHAPE:\n        new_arr = np.full(\n            (MAX_ALLOWED_SHAPE, MAX_ALLOWED_SHAPE), placeholder, dtype=object\n        )\n        new_arr[:-2, :-2] = arr[: MAX_ALLOWED_SHAPE - 2, : MAX_ALLOWED_SHAPE - 2]\n        last_row = arr[arr_shape - 1, :]\n        first_cols = last_row[: MAX_ALLOWED_SHAPE - 2]\n        new_arr[MAX_ALLOWED_SHAPE - 1, : MAX_ALLOWED_SHAPE - 2] = first_cols\n        last_col = arr[:, arr.shape[1] - 1]\n        first_rows = last_col[: MAX_ALLOWED_SHAPE - 2]\n        new_arr[: MAX_ALLOWED_SHAPE - 2, MAX_ALLOWED_SHAPE - 1] = first_rows\n        new_arr[MAX_ALLOWED_SHAPE - 1, MAX_ALLOWED_SHAPE - 1 :] = arr[\n            arr_shape - 1, arr.shape[1] - 1 :\n        ]\n        new_arr[0, MAX_ALLOWED_SHAPE - 2] = l_dot\n        new_arr[MAX_ALLOWED_SHAPE - 1, MAX_ALLOWED_SHAPE - 2] = l_dot\n\n        new_arr[MAX_ALLOWED_SHAPE - 2, 0] = v_dot\n        new_arr[MAX_ALLOWED_SHAPE - 2, MAX_ALLOWED_SHAPE - 1] = v_dot\n    elif arr_shape < MIN_ALLOWED_SHAPE:\n        row_cols_needed = max(MIN_ALLOWED_SHAPE - arr_shape, 0)\n        new_arr = np.pad(\n            arr.astype(object),\n            ((0, row_cols_needed), (0, row_cols_needed)),\n            mode="constant",\n            constant_values=placeholder,\n        )\n        new_arr[:, MIN_ALLOWED_SHAPE - 1] = v_dot\n        if row_cols_needed > 1:\n            new_arr[MIN_ALLOWED_SHAPE - row_cols_needed :, 0] = v_dot\n        new_arr[0, MIN_ALLOWED_SHAPE - row_cols_needed :] = l_dot\n        new_arr[MIN_ALLOWED_SHAPE - 1, MIN_ALLOWED_SHAPE - row_cols_needed :] = l_dot\n        new_arr[MIN_ALLOWED_SHAPE - 1, :] = l_dot\n\n    return new_arr.T\n\n\ndef numpy_1d_array_as_table(arr: np.ndarray, placeholder: str):\n    if arr.size > MAX_ALLOWED_SHAPE:\n        converted_type = arr.astype(object)\n        new_arr = converted_type[:MAX_ALLOWED_SHAPE]\n        new_arr[MAX_ALLOWED_SHAPE - 2] = l_dot\n    elif arr.size < MIN_ALLOWED_SHAPE:\n        new_arr = np.full((MIN_ALLOWED_SHAPE,), placeholder, dtype=object)\n        new_arr[: arr.size] = arr[: arr.size]\n    else:\n        new_arr = arr\n    return new_arr.reshape(-1, 1)\n\n\ndef numpy_array_as_table(arr: np.ndarray):\n    ndim = arr.ndim\n    if ndim == 1:\n        cell_values = numpy_1d_array_as_table(arr, l_dot)\n    elif ndim > 2:\n        raise ValueError("MATRIX_VIEW can process only 2D arrays!")\n    else:\n        row_shape, col_shape = arr.shape\n        if row_shape != col_shape:\n            raise ValueError("Rows and columns must be of same shape!")\n        cell_values = numpy_2d_array_as_table(arr, row_shape, d_dot)\n    return cell_values\n\n\n@flojoy\ndef MATRIX_VIEW(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    dc_input = dc_inputs[0]\n    match dc_input.type:\n        case "matrix":\n            np_arr = dc_input.m\n            cell_values = numpy_array_as_table(np_arr)\n        case "ordered_pair":\n            np_arr = dc_input.y\n            cell_values = numpy_array_as_table(np_arr)\n        case _:\n            raise ValueError(\n                f"unsupported DataContainer type passed for MATRIX_VIEW: {dc_input.type}"\n            )\n    fig = go.Figure(\n        data=[\n            go.Table(\n                header=dict(line={"width": 0}, values=[]),\n                cells=dict(\n                    values=cell_values,\n                    line={"width": 3},\n                    font={"size": FONT_SIZE},\n                    height=CELL_SIZE,\n                    align="center",\n                    format=[".3"],\n                ),\n            )\n        ]\n    )\n    width = MAX_ALLOWED_SHAPE * CELL_SIZE + 80\n    height = width + 80\n    fig.layout = go.Layout(\n        autosize=False,\n        width=width,\n        height=height,\n        margin=dict(l=0, r=0, t=0, b=0),\n        xaxis=dict(visible=False),\n        yaxis=dict(visible=False),\n        hovermode="closest",\n        font=dict(size=FONT_SIZE),\n    )\n\n    return DataContainer(type="plotly", fig=fig)\n',m="",p="",u="",A="",h={},L=void 0,y={unversionedId:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/MATRIX_VIEW",id:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/MATRIX_VIEW",title:"MATRIX_VIEW",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/MATRIX_VIEW.md",sourceDirName:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW",slug:"/nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/",permalink:"/nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"LINE",permalink:"/nodes/VISUALIZERS/PLOTLY/LINE/"},next:{title:"CONDITIONAL",permalink:"/nodes/LOGIC_GATES/CONDITIONALS/CONDITIONAL"}},I={},S=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],f={toc:S},T="wrapper";function b(e){let{components:n,...t}=e;return(0,a.kt)(T,(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{mdxType:"DocString"},c),(0,a.kt)(o.Z,{GLink:"VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/MATRIX_VIEW.py",mdxType:"PythonCode"},E),(0,a.kt)(i.Z,{mdxType:"Parameters"},m),(0,a.kt)(d.Z,{mdxType:"SectionBreak"}),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)(s.Z,{GLink:"VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW",nodeLabel:"MATRIX_VIEW",mdxType:"AppDisplay"}),(0,a.kt)(d.Z,{mdxType:"SectionBreak"}),(0,a.kt)("h2",{id:"appendix"},"Appendix"),(0,a.kt)(_.Z,{index:0,folderPath:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/appendix/",mdxType:"AppendixSection"},p),(0,a.kt)(_.Z,{index:1,folderPath:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/appendix/",mdxType:"AppendixSection"},u),(0,a.kt)(_.Z,{index:2,folderPath:"nodes/VISUALIZERS/DATA_STRUCTURE/MATRIX_VIEW/appendix/",mdxType:"AppendixSection"},A))}b.isMDXComponent=!0}}]);