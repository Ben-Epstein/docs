"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[6293],{62605:(e,n,t)=>{t.d(n,{Z:()=>T});var a=t(67294),l=t(74866),r=t(85162),i=t(11570),d=t(32871),E=t(83599);t(99869);const o=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(i.HH,{type:"target",position:i.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(i.HH,{type:"source",position:i.Ly.Right,id:"b"}))}));var s=t(33140),c=t(73091),m=t(2029),p=t(76887),u=t(49188),f=t(92949);const h={default:o},g={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function T(e){let{children:n,data:t,GLink:o}=e;const{colorMode:T}=(0,f.I)();if(!n)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${u.i}/${o}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const I=JSON.parse(n).rfInstance,N="20em";return a.createElement("div",null,a.createElement(l.Z,null,a.createElement(r.Z,{value:"app",label:"App",default:!0},a.createElement(i.tV,null,a.createElement("div",{style:{height:N}},a.createElement(i.x$,{nodes:I.nodes,nodeTypes:h,edges:I.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(d.a,{style:{backgroundColor:"light"===T?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===T?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===T?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(E.A,null))))),a.createElement(r.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:N}},a.createElement(s.k,null,a.createElement(c.E,{label:"x",style:g}),a.createElement(c.E,{dependentAxis:!0,label:"y",style:g}),a.createElement(m.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),a.createElement(r.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:N}},a.createElement(p.L,{data:I})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(25365);function r(e){let{children:n,index:t,folderPath:r}=e;const i=["notes.md","hardware.md","media.md"],d=["Theory and technical notes","Parts list and drivers","Media"][t],E="https://github.com/flojoy-io/docs/tree/main/docs/"+r+i[t],o="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,d))),o?null:""!==n?a.createElement(l.D,null,n):a.createElement(l.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:E},"Edit ",i[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294),l=t(5673),r=t(70266),i=t(7284),d=t(85012),E=t(92949);function o(e){let{children:n}=e;const{colorMode:t}=(0,E.I)();if(""===n.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const r=n;return a.createElement(a.Fragment,null,a.createElement(l.Z,{language:"yaml",style:"dark"===t?i.Z:d.Z},r),a.createElement("br",null))}l.Z.registerLanguage("yaml",r.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),l=t(74160);function r(e){let{children:n}=e;if(""===n.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=l.ZP.parse(n);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(t[e]).map((n=>a.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),l=t(60614),r=t(49188);function i(e){let{GLink:n,children:t}=e,i=t;if(i.includes('"""')){let e=i.split('"""')[0],n=i.split('"""')[2];i=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${r.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(l.Z,{className:"language-python"},i)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294);function l(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>l,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},l="https://github.com/flojoy-io/nodes/tree/main"},77207:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>D,contentTitle:()=>b,default:()=>S,frontMatter:()=>N,metadata:()=>_,toc:()=>O});var a=t(87462),l=(t(67294),t(3905)),r=t(57685),i=t(79267),d=t(47062),E=t(62605),o=t(91906),s=t(89418);const c="The EDGE_DETECTION node detects edges in the image passed to it.\nThis is done through the the Pillow image filter FIND_EDGES.\nNote that the image is converted to greyscale during this processing.\n\nParameters\n----------\nNone\n\nReturns\n-------\nimage\n    The image with detected edges in white.\n",m='from flojoy import flojoy, DataContainer\nimport cv2\nimport numpy as np\nfrom PIL import ImageFilter, Image\n\n\n@flojoy\ndef EDGE_DETECTION(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    """The EDGE_DETECTION node detects edges in the image passed to it.\n    This is done through the the Pillow image filter FIND_EDGES.\n    Note that the image is converted to greyscale during this processing.\n\n    Parameters\n    ----------\n    None\n\n    Returns\n    -------\n    image\n        The image with detected edges in white.\n    """\n    dc_input = dc_inputs[0]\n    if dc_input.type != "image":\n        raise ValueError(\n            f"unsupported DataContainer type passed to EDGE_DETECTION node: \'{dc_input.type}\'"\n        )\n    r = dc_input.r\n    g = dc_input.g\n    b = dc_input.b\n    a = dc_input.a\n\n    if a is not None:\n        rgba_image = np.stack((r, g, b, a), axis=2)\n\n    else:\n        rgba_image = np.stack((r, g, b), axis=2)\n\n    try:\n        image = Image.fromarray(rgba_image)\n        image = image.convert("L")\n        image = image.filter(ImageFilter.FIND_EDGES)\n        image = image.convert("RGB")\n        image = np.array(image)\n\n        try:\n            r, g, b, a = cv2.split(image)\n        except:\n            r, g, b = cv2.split(image)\n        if a is None:\n            a = None\n        return DataContainer(\n            type="image",\n            r=r,\n            g=g,\n            b=b,\n            a=a,\n        )\n    except Exception as e:\n        raise e\n',p="";var u=t(71800);const f='{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 210,\n                "height": 130,\n                "id": "END-5e6d94ed-1f79-4c57-8b2f-753a22405f55",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-5e6d94ed-1f79-4c57-8b2f-753a22405f55",\n                    "label": "Terminate",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 1007.1969851172043,\n                    "y": 184.52843456112544\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1007.1969851172043,\n                    "y": 184.52843456112544\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 150,\n                "id": "LOCAL_FILE-94057446-4687-4613-9170-0accb0759dd9",\n                "type": "LOCAL_FILE_SYSTEM",\n                "data": {\n                    "id": "LOCAL_FILE-94057446-4687-4613-9170-0accb0759dd9",\n                    "label": "LOCAL FILE",\n                    "func": "LOCAL_FILE",\n                    "type": "LOCAL_FILE_SYSTEM",\n                    "ctrls": {\n                        "file_type": {\n                            "functionName": "LOCAL_FILE",\n                            "param": "file_type",\n                            "value": "image"\n                        },\n                        "path": {\n                            "functionName": "LOCAL_FILE",\n                            "param": "path",\n                            "value": ""\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 202.04316645575113,\n                    "y": 174.42317970418543\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 202.04316645575113,\n                    "y": 174.42317970418543\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 150,\n                "id": "EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1f",\n                "type": "IMAGE_PROCESSING",\n                "data": {\n                    "id": "EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1f",\n                    "label": "EDGE DETECTION",\n                    "func": "EDGE_DETECTION",\n                    "type": "IMAGE_PROCESSING",\n                    "ctrls": {},\n                    "pip_dependencies": [\n                        {\n                            "name": "opencv-python-headless",\n                            "v": "4.7.0.72"\n                        },\n                        {\n                            "name": "Pillow",\n                            "v": "9.5.0"\n                        }\n                    ],\n                    "selected": false\n                },\n                "position": {\n                    "x": 622.6676812585341,\n                    "y": 173.99111377857844\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 622.6676812585341,\n                    "y": 173.99111377857844\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "LOCAL_FILE-94057446-4687-4613-9170-0accb0759dd9",\n                "sourceHandle": "main",\n                "target": "EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1f",\n                "targetHandle": "EDGE_DETECTION",\n                "id": "reactflow__edge-LOCAL_FILE-94057446-4687-4613-9170-0accb0759dd9main-EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1fEDGE_DETECTION"\n            },\n            {\n                "source": "EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1f",\n                "sourceHandle": "main",\n                "target": "END-5e6d94ed-1f79-4c57-8b2f-753a22405f55",\n                "targetHandle": "END",\n                "id": "reactflow__edge-EDGE_DETECTION-fdb3c609-01e4-4fe3-a7dc-35d2b6f73d1fmain-END-5e6d94ed-1f79-4c57-8b2f-753a22405f55END"\n            }\n        ],\n        "viewport": {\n            "x": 383.94248946966945,\n            "y": 121.85910915060867,\n            "zoom": 1.1608238532718647\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "output",\n            "name": "Plot",\n            "minWidth": 2,\n            "minHeight": 3,\n            "id": "ctrl-d81b57c0-dda4-4160-894c-8307b5df7ef7",\n            "hidden": false,\n            "param": "OBJECT_DETECTION-a9866d79-0bc0-45d7-a2a4-6825b7a012bd",\n            "val": 0,\n            "layout": {\n                "w": 4,\n                "h": 4,\n                "x": 2,\n                "y": 0,\n                "i": "ctrl-d81b57c0-dda4-4160-894c-8307b5df7ef7",\n                "minW": 2,\n                "minH": 3,\n                "moved": false,\n                "static": true\n            }\n        },\n        {\n            "type": "input",\n            "name": "Text Input",\n            "minWidth": 1,\n            "minHeight": 1,\n            "id": "ctrl-e813ad6f-6717-4242-b705-2ef72861fe45",\n            "hidden": false,\n            "param": {\n                "id": "LOCAL_FILE_LOCALFILE_path",\n                "functionName": "LOCAL_FILE",\n                "param": "path",\n                "nodeId": "LOCAL_FILE-b6953411-4f5e-4f22-aaba-bdc923e56b86",\n                "inputId": "ctrl-e813ad6f-6717-4242-b705-2ef72861fe45"\n            },\n            "val": 0,\n            "layout": {\n                "w": 2,\n                "h": 2,\n                "x": 0,\n                "y": 0,\n                "i": "ctrl-e813ad6f-6717-4242-b705-2ef72861fe45",\n                "minW": 1,\n                "minH": 1,\n                "moved": false,\n                "static": true\n            }\n        }\n    ]\n}',h="",g="",T="",I="",N={},b=void 0,_={unversionedId:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/EDGE_DETECTION",id:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/EDGE_DETECTION",title:"EDGE_DETECTION",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/EDGE_DETECTION.md",sourceDirName:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION",slug:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/",permalink:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"IMAGE_SMOOTHING",permalink:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/IMAGE_SMOOTHING/"},next:{title:"MULTIPLY",permalink:"/nodes/TRANSFORMERS/ARITHMETIC/MULTIPLY/"}},D={},O=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],y={toc:O},C="wrapper";function S(e){let{components:n,...t}=e;return(0,l.kt)(C,(0,a.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{mdxType:"DocString"},c),(0,l.kt)(i.Z,{GLink:"TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/EDGE_DETECTION.py",mdxType:"PythonCode"},m),(0,l.kt)(d.Z,{mdxType:"Parameters"},p),(0,l.kt)(o.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(E.Z,{data:h,nodeLabel:"EDGE_DETECTION",mdxType:"AppDisplay"},f),(0,l.kt)(u.default,{mdxType:"Example1"}),(0,l.kt)(o.Z,{mdxType:"SectionBreak"}),(0,l.kt)("h2",{id:"appendix"},"Appendix"),(0,l.kt)(s.Z,{index:0,folderPath:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/appendix/",mdxType:"AppendixSection"},g),(0,l.kt)(s.Z,{index:1,folderPath:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/appendix/",mdxType:"AppendixSection"},T),(0,l.kt)(s.Z,{index:2,folderPath:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/appendix/",mdxType:"AppendixSection"},I))}S.isMDXComponent=!0},71800:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>E,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var a=t(87462),l=(t(67294),t(3905));const r={},i=void 0,d={unversionedId:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1/example",id:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1/example",title:"example",description:"In this example the edges of an image are detected using the EDGE_DETECTION node.",source:"@site/docs/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1/example.md",sourceDirName:"nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1",slug:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1/example",permalink:"/nodes/TRANSFORMERS/IMAGE_PROCESSING/EDGE_DETECTION/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},E={},o=[],s={toc:o},c="wrapper";function m(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this example the edges of an image are detected using the ",(0,l.kt)("inlineCode",{parentName:"p"},"EDGE_DETECTION")," node."),(0,l.kt)("p",null,"The image is loaded using the ",(0,l.kt)("inlineCode",{parentName:"p"},"LOCAL_FILE")," node. In this case the default astronaut image."))}m.isMDXComponent=!0}}]);