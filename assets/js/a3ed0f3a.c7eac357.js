"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[3179],{62605:(e,n,t)=>{t.d(n,{Z:()=>L});var a=t(67294),o=t(74866),i=t(85162),l=t(11570),d=t(32871),r=t(83599);t(99869);const s=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(l.HH,{type:"target",position:l.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(l.HH,{type:"source",position:l.Ly.Right,id:"b"}))}));var p=t(33140),c=t(73091),m=t(2029),u=t(76887),O=t(49188),f=t(92949);const h={default:s},b={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function L(e){let{children:n,data:t,GLink:s}=e;const{colorMode:L}=(0,f.I)();if(!n)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${O.i}/${s}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const E=JSON.parse(n).rfInstance,_="20em";return a.createElement("div",null,a.createElement(o.Z,null,a.createElement(i.Z,{value:"app",label:"App",default:!0},a.createElement(l.tV,null,a.createElement("div",{style:{height:_}},a.createElement(l.x$,{nodes:E.nodes,nodeTypes:h,edges:E.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(d.a,{style:{backgroundColor:"light"===L?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===L?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===L?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(r.A,null))))),a.createElement(i.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:_}},a.createElement(p.k,null,a.createElement(c.E,{label:"x",style:b}),a.createElement(c.E,{dependentAxis:!0,label:"y",style:b}),a.createElement(m.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),a.createElement(i.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:_}},a.createElement(u.L,{data:E})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),o=t(25365);function i(e){let{children:n,index:t,folderPath:i}=e;const l=["notes.md","hardware.md","media.md"],d=["Theory and technical notes","Parts list and drivers","Media"][t],r="https://github.com/flojoy-io/docs/tree/main/docs/"+i+l[t],s="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,d))),s?null:""!==n?a.createElement(o.D,null,n):a.createElement(o.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:r},"Edit ",l[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(67294),o=t(5673),i=t(70266),l=t(7284),d=t(85012),r=t(92949);function s(e){let{children:n}=e;const{colorMode:t}=(0,r.I)();if(""===n.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const i=n;return a.createElement(a.Fragment,null,a.createElement(o.Z,{language:"yaml",style:"dark"===t?l.Z:d.Z},i),a.createElement("br",null))}o.Z.registerLanguage("yaml",i.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),o=t(74160);function i(e){let{children:n}=e;if(""===n.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=o.ZP.parse(n);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(t[e]).map((n=>a.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294),o=t(60614),i=t(49188);function l(e){let{GLink:n,children:t}=e,l=t;if(l.includes('"""')){let e=l.split('"""')[0],n=l.split('"""')[2];l=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${i.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(o.Z,{className:"language-python"},l)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294);function o(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>o,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},o="https://github.com/flojoy-io/nodes/tree/main"},88545:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>N,contentTitle:()=>y,default:()=>S,frontMatter:()=>_,metadata:()=>T,toc:()=>g});var a=t(87462),o=(t(67294),t(3905)),i=t(57685),l=t(79267),d=t(47062),r=t(62605),s=t(91906),p=t(89418);const c="The LOOP node is a specialized node that iterates through the body nodes for a given number of times.\n    To ensure proper functionality, the LOOP node relies on a companion node called the `GOTO` node.\n\n    Parameters\n    ----------\n    num_loops : int\n        number of times to iterate through body nodes default is `-1` meaning infinity.\n    ",m='import json\n\nfrom node_sdk.small_memory import SmallMemory\n\nfrom flojoy import JobResultBuilder, DataContainer, flojoy\n\nmemory_key = "loop-info"\n\n\nclass LoopData:\n    def __init__(\n        self, node_id, num_loops=-1, current_iteration=0, is_finished=False\n    ) -> None:\n        self.node_id = node_id\n        self.num_loops = int(num_loops)\n        self.current_iteration = int(current_iteration)\n        self.is_finished = bool(is_finished)\n\n    def restart(self):\n        self.current_iteration = 0\n        self.is_finished = False\n\n    def step(self):\n        self.current_iteration += 1\n        if self.current_iteration > self.num_loops:\n            self.is_finished = True\n\n    def get_data(self):\n        return {\n            "node_id": self.node_id,\n            "num_loops": self.num_loops,\n            "current_iteration": self.current_iteration,\n            "is_finished": self.is_finished,\n        }\n\n    @staticmethod\n    def from_data(node_id, data: dict):\n        loop_data = LoopData(\n            node_id,\n            num_loops=data.get("num_loops", -1),\n            current_iteration=data.get("current_iteration", 0),\n            is_finished=data.get("is_finished", False),\n        )\n        return loop_data\n\n    def print(self, prefix=""):\n        print(f"{prefix}loop Data:", json.dumps(self.get_data(), indent=2))\n\n\n@flojoy\ndef LOOP(dc_inputs: list[DataContainer], params: dict) -> dict:\n    \n    num_loops: int = params.get("num_loops", 0)\n    node_id = params.get("node_id", 0)\n\n    print("\\n\\nstart loop:", node_id)\n\n    # infinite loop\n    if num_loops == -1:\n        print("infinite loop")\n        return build_result(inputs=dc_inputs, is_loop_finished=False)\n\n    loop_data: LoopData = load_loop_data(node_id, num_loops)\n    loop_data.print("at start ")\n\n    # loop was previously finished, but now re-executing, so restart\n    if loop_data.is_finished:\n        loop_data.restart()\n    else:\n        loop_data.step()\n\n    if not loop_data.is_finished:\n        store_loop_data(node_id, loop_data)\n    else:\n        print("finished loop")\n        delete_loop_data(node_id)\n\n    print("end loop\\n\\n")\n\n    return build_result(dc_inputs, loop_data.is_finished)\n\n\ndef load_loop_data(node_id, default_num_loops) -> LoopData:\n    data = SmallMemory().read_memory(node_id, memory_key) or {}\n    loop_data = LoopData.from_data(\n        node_id=node_id, data={"num_loops": default_num_loops, **data}\n    )\n    return loop_data\n\n\ndef store_loop_data(node_id, loop_data: LoopData):\n    SmallMemory().write_to_memory(node_id, memory_key, loop_data.get_data())\n    loop_data.print("store ")\n\n\ndef delete_loop_data(node_id):\n    SmallMemory().delete_object(node_id, memory_key)\n    print("delete loop data")\n\n\ndef build_result(inputs, is_loop_finished: bool):\n    return (\n        JobResultBuilder()\n        .from_inputs(inputs)\n        .flow_by_flag(\n            flag=is_loop_finished,\n            directionsWhenFalse=["body"],\n            directionsWhenTrue=["end"],\n        )\n        .build()\n    )\n',u="num_loops:\n  default: -1\n  type: int\n";var O=t(22422);const f='{\n    "rfInstance": {\n        "nodes": [\n            {\n                "width": 150,\n                "height": 181,\n                "id": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                "type": "LOOP",\n                "data": {\n                    "id": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                    "label": "LOOP",\n                    "func": "LOOP",\n                    "type": "LOOP",\n                    "ctrls": {\n                        "num_loops": {\n                            "functionName": "LOOP",\n                            "param": "num_loops",\n                            "value": "5"\n                        }\n                    },\n                    "inputs": [\n                        {\n                            "name": "end",\n                            "id": "end",\n                            "type": "source"\n                        },\n                        {\n                            "name": "body",\n                            "id": "body",\n                            "type": "source"\n                        }\n                    ],\n                    "selected": false\n                },\n                "position": {\n                    "x": -165.19821730816662,\n                    "y": 224.91813286421683\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": -165.19821730816662,\n                    "y": 224.91813286421683\n                },\n                "dragging": true\n            },\n            {\n                "width": 380,\n                "height": 293,\n                "id": "BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207",\n                "type": "PLOTLY_VISOR",\n                "data": {\n                    "id": "BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207",\n                    "label": "BIG NUMBER",\n                    "func": "BIG_NUMBER",\n                    "type": "PLOTLY_VISOR",\n                    "ctrls": {\n                        "suffix": {\n                            "functionName": "BIG_NUMBER",\n                            "param": "suffix",\n                            "value": ""\n                        },\n                        "prefix": {\n                            "functionName": "BIG_NUMBER",\n                            "param": "prefix",\n                            "value": ""\n                        },\n                        "relative_delta": {\n                            "functionName": "BIG_NUMBER",\n                            "param": "relative_delta",\n                            "value": "true"\n                        },\n                        "title": {\n                            "functionName": "BIG_NUMBER",\n                            "param": "title",\n                            "value": ""\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 773.3732112632616,\n                    "y": 210.63241857850255\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 773.3732112632616,\n                    "y": 210.63241857850255\n                },\n                "dragging": true\n            },\n            {\n                "width": 130,\n                "height": 130,\n                "id": "CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62",\n                "type": "SIMULATION",\n                "data": {\n                    "id": "CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62",\n                    "label": "4",\n                    "func": "CONSTANT",\n                    "type": "SIMULATION",\n                    "ctrls": {\n                        "constant": {\n                            "functionName": "CONSTANT",\n                            "param": "constant",\n                            "value": "4"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 274.8017826918334,\n                    "y": 413.4895614356452\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 274.8017826918334,\n                    "y": 413.4895614356452\n                },\n                "dragging": true\n            },\n            {\n                "width": 130,\n                "height": 130,\n                "id": "FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79",\n                "type": "SIMULATION",\n                "data": {\n                    "id": "FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79",\n                    "label": "FEEDBACK",\n                    "func": "FEEDBACK",\n                    "type": "SIMULATION",\n                    "ctrls": {\n                        "referred_node": {\n                            "functionName": "FEEDBACK",\n                            "param": "referred_node",\n                            "value": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 263.37321126326196,\n                    "y": 200.63241857850244\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 263.37321126326196,\n                    "y": 200.63241857850244\n                },\n                "dragging": true\n            },\n            {\n                "width": 99,\n                "height": 130,\n                "id": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75",\n                "type": "ARITHMETIC",\n                "data": {\n                    "id": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75",\n                    "label": "MULTIPLY",\n                    "func": "MULTIPLY",\n                    "type": "ARITHMETIC",\n                    "ctrls": {},\n                    "inputs": [\n                        {\n                            "name": "y",\n                            "id": "multiply_y",\n                            "type": "target"\n                        }\n                    ],\n                    "selected": false\n                },\n                "position": {\n                    "x": 536.2303541204047,\n                    "y": 293.4895614356452\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 536.2303541204047,\n                    "y": 293.4895614356452\n                },\n                "dragging": true\n            },\n            {\n                "width": 210,\n                "height": 130,\n                "id": "END-7f67a24c-5bd5-4906-bd86-682cb10db127",\n                "type": "TERMINATOR",\n                "data": {\n                    "id": "END-7f67a24c-5bd5-4906-bd86-682cb10db127",\n                    "label": "END",\n                    "func": "END",\n                    "type": "TERMINATOR",\n                    "ctrls": {},\n                    "selected": false\n                },\n                "position": {\n                    "x": 309.0874969775476,\n                    "y": -43.65329570721184\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 309.0874969775476,\n                    "y": -43.65329570721184\n                },\n                "dragging": true\n            },\n            {\n                "width": 150,\n                "height": 150,\n                "id": "GOTO-0877f4a6-d19b-4311-a671-48444fe3e254",\n                "type": "LOOP",\n                "data": {\n                    "id": "GOTO-0877f4a6-d19b-4311-a671-48444fe3e254",\n                    "label": "GOTO",\n                    "func": "GOTO",\n                    "type": "LOOP",\n                    "ctrls": {\n                        "goto_node_id": {\n                            "functionName": "GOTO",\n                            "param": "goto_node_id",\n                            "value": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": 1240.516068406119,\n                    "y": 272.0609900070739\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": 1240.516068406119,\n                    "y": 272.0609900070739\n                },\n                "dragging": true\n            },\n            {\n                "width": 130,\n                "height": 130,\n                "id": "CONSTANT-d016dbf8-556b-4a3c-9f68-c801e12b9f2c",\n                "type": "SIMULATION",\n                "data": {\n                    "id": "CONSTANT-d016dbf8-556b-4a3c-9f68-c801e12b9f2c",\n                    "label": "8",\n                    "func": "CONSTANT",\n                    "type": "SIMULATION",\n                    "ctrls": {\n                        "constant": {\n                            "functionName": "CONSTANT",\n                            "param": "constant",\n                            "value": "8"\n                        }\n                    },\n                    "selected": false\n                },\n                "position": {\n                    "x": -408.007563009186,\n                    "y": 245.44358920891227\n                },\n                "selected": false,\n                "positionAbsolute": {\n                    "x": -408.007563009186,\n                    "y": 245.44358920891227\n                },\n                "dragging": true\n            }\n        ],\n        "edges": [\n            {\n                "source": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                "sourceHandle": "body",\n                "target": "CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62",\n                "targetHandle": "CONSTANT",\n                "id": "reactflow__edge-LOOP-c9429714-96da-4a0a-86c0-4e657d188db0body-CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62CONSTANT"\n            },\n            {\n                "source": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                "sourceHandle": "body",\n                "target": "FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79",\n                "targetHandle": "FEEDBACK",\n                "id": "reactflow__edge-LOOP-c9429714-96da-4a0a-86c0-4e657d188db0body-FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79FEEDBACK"\n            },\n            {\n                "source": "FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79",\n                "sourceHandle": "main",\n                "target": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75",\n                "targetHandle": "MULTIPLY",\n                "id": "reactflow__edge-FEEDBACK-9cbc8309-a437-496b-b15d-052d3ebb6e79main-MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75MULTIPLY"\n            },\n            {\n                "source": "CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62",\n                "sourceHandle": "main",\n                "target": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75",\n                "targetHandle": "multiply_y",\n                "id": "reactflow__edge-CONSTANT-31549d95-fa48-492f-8b7c-1239ee0bdd62main-MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75multiply_y"\n            },\n            {\n                "source": "MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75",\n                "sourceHandle": "main",\n                "target": "BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207",\n                "targetHandle": "BIG_NUMBER",\n                "id": "reactflow__edge-MULTIPLY-01259e3c-f5c1-4b07-9733-c2e70b371f75main-BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207BIG_NUMBER"\n            },\n            {\n                "source": "BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207",\n                "sourceHandle": "main",\n                "target": "GOTO-0877f4a6-d19b-4311-a671-48444fe3e254",\n                "targetHandle": "GOTO",\n                "id": "reactflow__edge-BIG_NUMBER-7dd775a5-2604-4b31-ad6d-8888ac9c3207main-GOTO-0877f4a6-d19b-4311-a671-48444fe3e254GOTO"\n            },\n            {\n                "source": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                "sourceHandle": "end",\n                "target": "END-7f67a24c-5bd5-4906-bd86-682cb10db127",\n                "targetHandle": "END",\n                "id": "reactflow__edge-LOOP-c9429714-96da-4a0a-86c0-4e657d188db0end-END-7f67a24c-5bd5-4906-bd86-682cb10db127END"\n            },\n            {\n                "source": "CONSTANT-d016dbf8-556b-4a3c-9f68-c801e12b9f2c",\n                "sourceHandle": "main",\n                "target": "LOOP-c9429714-96da-4a0a-86c0-4e657d188db0",\n                "targetHandle": "LOOP",\n                "id": "reactflow__edge-CONSTANT-d016dbf8-556b-4a3c-9f68-c801e12b9f2cmain-LOOP-c9429714-96da-4a0a-86c0-4e657d188db0LOOP"\n            }\n        ],\n        "viewport": {\n            "x": 209.57592296752466,\n            "y": 82.44326331471018,\n            "zoom": 0.8625093914350112\n        }\n    },\n    "ctrlsManifest": [\n        {\n            "type": "input",\n            "name": "Slider",\n            "id": "INPUT_PLACEHOLDER",\n            "hidden": false,\n            "minHeight": 1,\n            "minWidth": 2,\n            "layout": {\n                "x": 0,\n                "y": 0,\n                "h": 2,\n                "w": 2,\n                "minH": 1,\n                "minW": 2,\n                "i": "INPUT_PLACEHOLDER"\n            }\n        }\n    ]\n}',h="",b="",L="",E="",_={},y=void 0,T={unversionedId:"nodes/LOGIC_GATES/LOOPS/LOOP/LOOP",id:"nodes/LOGIC_GATES/LOOPS/LOOP/LOOP",title:"LOOP",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/LOGIC_GATES/LOOPS/LOOP/LOOP.md",sourceDirName:"nodes/LOGIC_GATES/LOOPS/LOOP",slug:"/nodes/LOGIC_GATES/LOOPS/LOOP/",permalink:"/nodes/LOGIC_GATES/LOOPS/LOOP/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"CONDITIONAL",permalink:"/nodes/LOGIC_GATES/CONDITIONALS/CONDITIONAL"},next:{title:"GOTO",permalink:"/nodes/LOGIC_GATES/LOOPS/GOTO/"}},N={},g=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],P={toc:g},I="wrapper";function S(e){let{components:n,...t}=e;return(0,o.kt)(I,(0,a.Z)({},P,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{mdxType:"DocString"},c),(0,o.kt)(l.Z,{GLink:"LOGIC_GATES/LOOPS/LOOP/LOOP.py",mdxType:"PythonCode"},m),(0,o.kt)(d.Z,{mdxType:"Parameters"},u),(0,o.kt)(s.Z,{mdxType:"SectionBreak"}),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)(r.Z,{data:h,nodeLabel:"LOOP",mdxType:"AppDisplay"},f),(0,o.kt)(O.default,{mdxType:"Example1"}),(0,o.kt)(s.Z,{mdxType:"SectionBreak"}),(0,o.kt)("h2",{id:"appendix"},"Appendix"),(0,o.kt)(p.Z,{index:0,folderPath:"nodes/LOGIC_GATES/LOOPS/LOOP/appendix/",mdxType:"AppendixSection"},b),(0,o.kt)(p.Z,{index:1,folderPath:"nodes/LOGIC_GATES/LOOPS/LOOP/appendix/",mdxType:"AppendixSection"},L),(0,o.kt)(p.Z,{index:2,folderPath:"nodes/LOGIC_GATES/LOOPS/LOOP/appendix/",mdxType:"AppendixSection"},E))}S.isMDXComponent=!0},22422:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const i={},l=void 0,d={unversionedId:"nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1/example",id:"nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1/example",title:"example",description:"In this example, we begin with a CONSTANT node that has a value of 8.",source:"@site/docs/nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1/example.md",sourceDirName:"nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1",slug:"/nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1/example",permalink:"/nodes/LOGIC_GATES/LOOPS/LOOP/examples/EX1/example",draft:!1,tags:[],version:"current",frontMatter:{}},r={},s=[{value:"Debug Panel",id:"debug-panel",level:3}],p={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this example, we begin with a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py"},(0,o.kt)("inlineCode",{parentName:"a"},"CONSTANT"))," node that has a value of 8."),(0,o.kt)("p",null,"The value is then passed to a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node, which, in turn, passes it to the nodes connected to its body output. The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node is a special node that takes a parameter called ",(0,o.kt)("inlineCode",{parentName:"p"},"num_loops"),", indicating the number of iterations. In this example, we used 5 iterations, but the default value for this parameter is ",(0,o.kt)("inlineCode",{parentName:"p"},"-1"),", meaning it will iterate infinitely. Each time the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node is executed, it checks the remaining number of iterations and enqueues all nodes connected to its body output if there are more iterations to be performed."),(0,o.kt)("p",null,"Next, we have two nodes, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py"},(0,o.kt)("inlineCode",{parentName:"a"},"CONSTANT"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/FEEDBACK/FEEDBACK.py"},(0,o.kt)("inlineCode",{parentName:"a"},"FEEDBACK")),", connected to the body output of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node. The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/FEEDBACK/FEEDBACK.py"},(0,o.kt)("inlineCode",{parentName:"a"},"FEEDBACK"))," node is another special node designed to collect the result of a given node ID. It takes a parameter called ",(0,o.kt)("inlineCode",{parentName:"p"},"node_reference"),", which is the ID of a node. It attempts to retrieve the result of the specified node ID. If the result is not found, it passes the result of its parent node. In this example, we provided the ID of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/TRANSFORMERS/ARITHMETIC/MULTIPLY/MULTIPLY.py"},(0,o.kt)("inlineCode",{parentName:"a"},"MULTIPLY"))," node as the parameter for the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/FEEDBACK/FEEDBACK.py"},(0,o.kt)("inlineCode",{parentName:"a"},"FEEDBACK"))," node."),(0,o.kt)("p",null,"We also have a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/TRANSFORMERS/ARITHMETIC/MULTIPLY/MULTIPLY.py"},(0,o.kt)("inlineCode",{parentName:"a"},"MULTIPLY"))," node, which performs element-wise multiplication on two input Numpy arrays. It is connected to a visual node called ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/VISUALIZERS/PLOTLY/BIG_NUMBER/BIG_NUMBER.py"},(0,o.kt)("inlineCode",{parentName:"a"},"BIG_NUMBER")),", which visualizes the returned value of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/TRANSFORMERS/ARITHMETIC/MULTIPLY/MULTIPLY.py"},(0,o.kt)("inlineCode",{parentName:"a"},"MULTIPLY"))," node in an indicators plot."),(0,o.kt)("p",null,"To enable the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node to function correctly, another helper node called ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/GOTO/GOTO.py"},(0,o.kt)("inlineCode",{parentName:"a"},"GOTO"))," is required. This node takes a parameter called ",(0,o.kt)("inlineCode",{parentName:"p"},"node_reference"),", similar to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/GENERATORS/SIMULATIONS/FEEDBACK/FEEDBACK.py"},(0,o.kt)("inlineCode",{parentName:"a"},"FEEDBACK"))," node. However, the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/GOTO/GOTO.py"},(0,o.kt)("inlineCode",{parentName:"a"},"GOTO"))," node always enqueues the specified node, which, in this case, is the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node. Therefore, the workflow is as follows: the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node enqueues the nodes connected to its body output, then the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/GOTO/GOTO.py"},(0,o.kt)("inlineCode",{parentName:"a"},"GOTO"))," node enqueues the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node again. The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node checks if the remaining number of iterations is greater than zero. If so, it enqueues its body nodes again until the number of remaining iterations becomes zero. Finally, it enqueues the nodes connected to its end output."),(0,o.kt)("p",null,"Lastly, we have an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/TERMINATORS/END.py"},(0,o.kt)("inlineCode",{parentName:"a"},"END"))," node which is connected with end output of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flojoy-io/nodes/blob/main/LOGIC_GATES/LOOPS/LOOP/LOOP.py"},(0,o.kt)("inlineCode",{parentName:"a"},"LOOP"))," node, which serves to terminate the program."),(0,o.kt)("h3",{id:"debug-panel"},"Debug Panel"),(0,o.kt)("p",null,"Here how it looks in debug panel:\n",(0,o.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/dm5f4kpjf/image/upload/v1686080780/Screenshot_50_xlni16.png",alt:'"loop-output"'})))}m.isMDXComponent=!0}}]);