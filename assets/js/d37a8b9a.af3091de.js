"use strict";(self.webpackChunkflojoy_doc=self.webpackChunkflojoy_doc||[]).push([[7444],{62605:(e,n,t)=>{t.d(n,{Z:()=>f});var a=t(67294),r=t(74866),l=t(85162),i=t(11570),o=t(32871),c=t(83599);t(99869);const m=(0,a.memo)((e=>{let{data:n}=e;return a.createElement(a.Fragment,null,a.createElement(i.HH,{type:"target",position:i.Ly.Left,style:{background:"#555"}}),a.createElement("div",null,a.createElement("strong",null,n.label)),a.createElement(i.HH,{type:"source",position:i.Ly.Right,id:"b"}))}));var d=t(33140),s=t(73091),p=t(2029),u=t(76887),h=t(49188),E=t(92949);const g={default:m},A={tickLabels:{fontSize:8,fill:"#BCC2C4"},label:{fontSize:8,fill:"#BCC2C4"}};function f(e){let{children:n,data:t,GLink:m}=e;const{colorMode:f}=(0,E.I)();if(!n)return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"No examples have been written for this node yet. You can add some ",a.createElement("a",{href:`${h.i}/${m}`,target:"_blank"},"here")),a.createElement("br",null)," ",a.createElement("br",null));const _=JSON.parse(n).rfInstance,y="20em";return a.createElement("div",null,a.createElement(r.Z,null,a.createElement(l.Z,{value:"app",label:"App",default:!0},a.createElement(i.tV,null,a.createElement("div",{style:{height:y}},a.createElement(i.x$,{nodes:_.nodes,nodeTypes:g,edges:_.edges,fitView:!0,proOptions:{hideAttribution:!0}},a.createElement(o.a,{style:{backgroundColor:"light"===f?"rgba(0, 0, 0, 0.1)":"rgba(255, 255, 255, 0.1)",height:80,width:150},nodeColor:"light"===f?"rgba(0, 0, 0, 0.25)":"rgba(255, 255, 255, 0.25)",maskColor:"light"===f?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",zoomable:!0,pannable:!0}),a.createElement(c.A,null))))),a.createElement(l.Z,{value:"output",label:"Output"},a.createElement("div",{style:{minHeight:y}},a.createElement(d.k,null,a.createElement(s.E,{label:"x",style:A}),a.createElement(s.E,{dependentAxis:!0,label:"y",style:A}),a.createElement(p.C,{style:{data:{fill:"#7B61FF"}},size:1,data:t})))),a.createElement(l.Z,{value:"spec",label:"App JSON spec"},a.createElement("div",{style:{minHeight:y}},a.createElement(u.L,{data:_})))))}},89418:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294),r=t(25365);function l(e){let{children:n,index:t,folderPath:l}=e;const i=["notes.md","hardware.md","media.md"],o=["Theory and technical notes","Parts list and drivers","Media"][t],c="https://github.com/flojoy-io/docs/tree/main/docs/"+l+i[t],m="string"==typeof n&&n.includes("Driver doc :");return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("details",null,a.createElement("summary",null,a.createElement("span",{style:{display:"inline-block",cursor:"pointer"}},a.createElement("h4",null,o))),m?null:""!==n?a.createElement(r.D,null,n):a.createElement(r.D,null,["No theory or technical notes have been contributed for this node yet.","This node does not require any peripheral hardware to operate. Please see INSTRUMENTS for nodes that interact with the physical world through connected hardware.","No supporting screenshots, photos, or videos have been added to the media.md file for this node."][t]),a.createElement("br",null),a.createElement("small",null,a.createElement("i",null,a.createElement("a",{href:c},"Edit ",i[t]," on GitHub")))),a.createElement("hr",null))}},57685:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(67294),r=t(5673),l=t(70266),i=t(7284),o=t(85012),c=t(92949);function m(e){let{children:n}=e;const{colorMode:t}=(0,c.I)();if(""===n.trim())return a.createElement(a.Fragment,null,a.createElement("blockquote",null,"This function does not have a docstring description yet."),a.createElement("br",null)," ",a.createElement("br",null));const l=n;return a.createElement(a.Fragment,null,a.createElement(r.Z,{language:"yaml",style:"dark"===t?i.Z:o.Z},l),a.createElement("br",null))}r.Z.registerLanguage("yaml",l.Z)},47062:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294),r=t(74160);function l(e){let{children:n}=e;if(""===n.trim())return a.createElement("blockquote",null,"This node does not currently have any input parameters.");const t=r.ZP.parse(n);return a.createElement("div",null,a.createElement("h3",null,"Input parameters"),Object.keys(t).map((e=>a.createElement(a.Fragment,null,a.createElement("details",null,a.createElement("summary",{key:e},a.createElement("code",null,e)),a.createElement("ul",null,Object.keys(t[e]).map((n=>a.createElement("li",{key:n},n," : ",JSON.stringify(t[e][n],void 0,4))))))))))}},79267:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(60614),l=t(49188);function i(e){let{GLink:n,children:t}=e,i=t;if(i.includes('"""')){let e=i.split('"""')[0],n=i.split('"""')[2];i=e.trimEnd()+n.trimStart().replace("\n\n","\n")}return a.createElement("div",null,a.createElement("div",{style:{display:"flex",gap:"5px",justifyContent:"flex-start",alignItems:"center"}},a.createElement("h3",{style:{marginBottom:0}},"Python code"),a.createElement("a",{href:`${l.i}/${n}`,target:"_blank",rel:"noopener noreferrer",class:"navbar__item navbar__link header-github-link","aria-label":"GitHub repository",style:{padding:"5px"}},"Github",a.createElement("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",class:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module"},a.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})))),a.createElement("details",{open:!0},a.createElement(r.Z,{className:"language-python"},i)),a.createElement("br",null))}},91906:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294);function r(){return a.createElement(a.Fragment,null,a.createElement("br",null),a.createElement("br",null),a.createElement("hr",null),a.createElement("br",null),a.createElement("br",null))}},49188:(e,n,t)=>{t.d(n,{i:()=>r,j:()=>a});const a={windows:"/getting-started/install/?platform=windows",mac:"/getting-started/install/?platform=unix"},r="https://github.com/flojoy-io/nodes/tree/main"},42360:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>f,default:()=>v,frontMatter:()=>A,metadata:()=>_,toc:()=>b});var a=t(87462),r=(t(67294),t(3905)),l=t(57685),i=t(79267),o=t(47062),c=t(62605),m=t(91906),d=t(89418);const s="\n    Takes a picture from a connected camera using OpenCV.\n    If no camera is connected, an error would be thrown.\n    ",p='import cv2\nimport os\nfrom flojoy import flojoy, DataContainer\nfrom PIL import Image\nimport numpy as np\n\n\n@flojoy\ndef CAMERA(dc_inputs: list[DataContainer], params: dict) -> DataContainer:\n    \n    camera_ind: int = params["camera_ind"]\n    try:\n        camera = cv2.VideoCapture(camera_ind)\n\n        if not camera.isOpened():\n            raise cv2.error("Failed to open camera")\n\n        result, frame = camera.read()\n\n        if not result:\n            raise cv2.error("Failed to capture image")\n        camera.release()\n        del camera\n\n        # Split the image channels\n        red_channel = frame[:, :, 0]\n        green_channel = frame[:, :, 1]\n        blue_channel = frame[:, :, 2]\n\n        if frame.shape[2] == 4:\n            alpha_channel = frame[:, :, 3]\n        else:\n            alpha_channel = None\n\n        return DataContainer(\n            type="image",\n            r=red_channel,\n            g=green_channel,\n            b=blue_channel,\n            a=alpha_channel,\n        )\n\n    except cv2.error as camera_error:\n        raise camera_error\n\n\n@flojoy\ndef CAMERA_MOCK(dc_inputs: list[DataContainer], params: dict):\n    print("Running mock version of CAMERA node...")\n\n    # Get the absolute path of the current directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct the path to the asset file\n    file_path = os.path.join(\n        current_dir, "assets", "astronaut.png"\n    )  # Load example image.\n    print("File to be loaded: ", file_path)\n    f = Image.open(file_path)\n    img_array = np.array(f.convert("RGBA"))\n    red_channel = img_array[:, :, 0]\n    green_channel = img_array[:, :, 1]\n    blue_channel = img_array[:, :, 2]\n    if img_array.shape[2] == 4:\n        alpha_channel = img_array[:, :, 3]\n    else:\n        alpha_channel = None\n    return DataContainer(\n        type="image", r=red_channel, g=green_channel, b=blue_channel, a=alpha_channel\n    )\n',u="camera_ind:\n  default: 0\n  type: int\n",h="## Notes and Documentation:\n",E="## HARDWARE required:\n\n- A USB camera connected to your computer\n",g='## Images links\n\nTODO : Update images and media with custom component.\n\n![image](/img/camera/CAMERA_add_node.png)<br />_Click "+ Add Node"._\n\n![image](/img/camera/CAMERA_add_node2.png)<br />\n\n![image](/img/camera/CAMERA_add_node3.png)<br />_Add Node selection menu._\n\n![image](/img/camera/CAMERA_search.png)<br />_Searching for a node._\n\n![image](/img/camera/CAMERA_nodes.png)<br />_Required nodes connected._\n\n![image](/img/camera/CAMERA_run.png)<br />_The node currently being run glows like "OBJECT_DETECTION" here._\n',A={},f=void 0,_={unversionedId:"nodes/INSTRUMENTS/WEB_CAM/CAMERA/CAMERA",id:"nodes/INSTRUMENTS/WEB_CAM/CAMERA/CAMERA",title:"CAMERA",description:"[//]: # (Custom component imports)",source:"@site/docs/nodes/INSTRUMENTS/WEB_CAM/CAMERA/CAMERA.md",sourceDirName:"nodes/INSTRUMENTS/WEB_CAM/CAMERA",slug:"/nodes/INSTRUMENTS/WEB_CAM/CAMERA/",permalink:"/nodes/INSTRUMENTS/WEB_CAM/CAMERA/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Installation",permalink:"/getting-started/install"},next:{title:"LABJACKU3",permalink:"/nodes/INSTRUMENTS/LABJACK/LABJACKU3/"}},y={},b=[{value:"Examples",id:"examples",level:2},{value:"Appendix",id:"appendix",level:2}],C={toc:b},M="wrapper";function v(e){let{components:n,...t}=e;return(0,r.kt)(M,(0,a.Z)({},C,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{mdxType:"DocString"},s),(0,r.kt)(i.Z,{GLink:"INSTRUMENTS/WEB_CAM/CAMERA/CAMERA.py",mdxType:"PythonCode"},p),(0,r.kt)(o.Z,{mdxType:"Parameters"},u),(0,r.kt)(m.Z,{mdxType:"SectionBreak"}),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(c.Z,{GLink:"INSTRUMENTS/WEB_CAM/CAMERA",nodeLabel:"CAMERA",mdxType:"AppDisplay"}),(0,r.kt)(m.Z,{mdxType:"SectionBreak"}),(0,r.kt)("h2",{id:"appendix"},"Appendix"),(0,r.kt)(d.Z,{index:0,folderPath:"nodes/INSTRUMENTS/WEB_CAM/CAMERA/appendix/",mdxType:"AppendixSection"},h),(0,r.kt)(d.Z,{index:1,folderPath:"nodes/INSTRUMENTS/WEB_CAM/CAMERA/appendix/",mdxType:"AppendixSection"},E),(0,r.kt)(d.Z,{index:2,folderPath:"nodes/INSTRUMENTS/WEB_CAM/CAMERA/appendix/",mdxType:"AppendixSection"},g))}v.isMDXComponent=!0}}]);